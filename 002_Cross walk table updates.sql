---cross table update
/*

   CREATE SEQUENCE  MASKED_SSN
   MINVALUE 1 MAXVALUE 9999999999999999999999999999 
   INCREMENT BY 1 START WITH 551201;
   
   CREATE SEQUENCE  MASKED_PHN
   MINVALUE 1 MAXVALUE 9999999999999999999999999999 
   INCREMENT BY 1 START WITH 7034551001;
   
   CREATE SEQUENCE  MASKED_FEIN
   MINVALUE 1 MAXVALUE 9999999999999999999999999999 
   INCREMENT BY 1 START WITH 803151001;


*/
-- date of birth update
UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = CASE WHEN SUBSTR(ORIGINAL,1,2) IN ('01','02', '03','04','05') THEN '01'
                  WHEN SUBSTR(ORIGINAL,1,2)  IN ('06','07', '08','09','10') THEN '06'
                  WHEN SUBSTR(ORIGINAL,1,2)  IN ('11','12', '13','14','15') THEN '11'
                 WHEN SUBSTR(ORIGINAL,1,2)  IN ('16','17', '18','19','20') THEN '16'
                  WHEN SUBSTR(ORIGINAL,1,2)  IN ('21','22', '23','24','25') THEN '21'
                  WHEN SUBSTR(ORIGINAL,1,2)  IN ('26','27', '28','29','30','31') THEN '26' END || SUBSTR(ORIGINAL,3) , A.MASK_KEY=A.ORG_KEY
 WHERE A.TABLE_NAME = 'TCCMS_INDV' 
AND A.TYPE='INDV_D_DOB';

--date of death update
UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = CASE WHEN SUBSTR(ORIGINAL,1,2) IN ('01','02', '03','04','05') THEN '01'
                  WHEN SUBSTR(ORIGINAL,1,2)  IN ('06','07', '08','09','10') THEN '06'
                  WHEN SUBSTR(ORIGINAL,1,2)  IN ('11','12', '13','14','15') THEN '11'
                 WHEN SUBSTR(ORIGINAL,1,2)  IN ('16','17', '18','19','20') THEN '16'
                  WHEN SUBSTR(ORIGINAL,1,2)  IN ('21','22', '23','24','25') THEN '21'
                  WHEN SUBSTR(ORIGINAL,1,2)  IN ('26','27', '28','29','30','31') THEN '26' END || SUBSTR(ORIGINAL,3) , A.MASK_KEY=A.ORG_KEY
 WHERE A.TABLE_NAME = 'TCCMS_INDV' 
AND A.TYPE='INDV_D_DOD';


--ssn update
UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = SUBSTR(ORIGINAL,1,3) || MASKED_SSN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_INDV' 
AND A.TYPE='INDV_C_SSN';

--INDV_N_MID
UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = dbms_random.string('U',1) , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_INDV' 
AND A.TYPE='INDV_N_MID';
--AND A.MASKED <> A.ORIGINAL;

--Phone number updateS
UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_PHN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PROV' 
AND A.TYPE='PROV_L_PH';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_PHN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_CASE_DEMO' 
AND A.TYPE='CASE_L_OTH_PH_AREA,CASE_L_OTH_PH_PRF,CASE_L_OTH_PH_SFX';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_PHN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_CASE_DEMO' 
AND A.TYPE='CASE_L_RES_PH_AREA,CASE_L_RES_PH_PRF,CASE_L_RES_PH_SFX';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_PHN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_CASE_DEMO' 
AND A.TYPE='CASE_L_WORK_PH_AREA,CASE_L_WORK_PH_PRF,CASE_L_WORK_PH_SFX';

---FIEN number updates
UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PRVN' 
AND A.TYPE='PRVN_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PROV' 
AND A.TYPE='PROV_C';


/*
UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_CHEN' 
AND A.TYPE='PROV_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PENR' 
AND A.TYPE='PROV_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PENR' 
AND A.TYPE='PRVN_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PRCL' 
AND A.TYPE='PROV_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PROV' 
AND A.TYPE='PRVN_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PROV' 
AND A.TYPE='PROV_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PROV_STAR' 
AND A.TYPE='PROV_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PRRA' 
AND A.TYPE='PROV_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PRRD' 
AND A.TYPE='PROV_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PRRG' 
AND A.TYPE='PROV_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PRRP' 
AND A.TYPE='PRVN_C';


UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PRCN' 
AND A.TYPE='PROV_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PVFE' 
AND A.TYPE='PROV_C';

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = MASKED_FEIN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PRRP' 
AND A.TYPE='PROV_C';

*/

commit;
---email update

--CASE_L_EMAIL;
UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = dbms_random.string('l',15) ||'@' || SUBSTR(A.ORIGINAL, INSTR(A.ORIGINAL, '@') + 1), 
    A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_CASE_DEMO' 
AND A.TYPE='CASE_L_EMAIL';


EXec CROSSWALK_TABLE_UPDT('TCCMS_INDV','INDV_N_LST');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_INDV','INDV_N_1ST');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PENR','PRVN_N');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PENR','PRVN_L_ADDR1');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PENR','PRVN_L_ADDR2');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PENR','PRVN_L_CITY,PRVN_L_ST,PRVN_L_ZIP');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_N_CNTCT1_1ST');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_N_CNTCT1_LST');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_N_CNTCT1_TITLE');
commit;
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_N_BOARD_CHAIR');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_L_MAIL_STRT');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_L_MAIL_STRT2');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_L_MAIL_CITY,PROV_L_MAIL_ST,PROV_L_MAIL_ZIP');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PRRP','PRRP_N_PAYEE');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PRVN','PRVN_L_ADDR1');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PRVN','PRVN_L_ADDR2');
commit;
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PRVN','PRVN_L_CITY,PRVN_L_ST,PRVN_L_ZIP');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_CCIN','CCIN_N_PROV');
commit;
EXEC CROSSWALK_TABLE_UPDT('TCCMS_CASE_DEMO','CASE_L_RES_STRT');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_CASE_DEMO','CASE_L_RES_STRT2');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_CASE_DEMO','CASE_L_RES_CITY,CASE_L_RES_ST,CASE_L_RES_ZIP5,CASE_L_RES_ZIP4');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_CASE_DEMO','CASE_L_MAIL_STRT');
commit;
EXEC CROSSWALK_TABLE_UPDT('TCCMS_CASE_DEMO','CASE_L_MAIL_STRT2');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_CASE_DEMO','CASE_L_MAIL_CITY,CASE_L_MAIL_ST,CASE_L_MAIL_ZIP5,CASE_L_MAIL_ZIP4');
commit;
--EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_N');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_L_STRT');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_L_STRT2');
EXEC CROSSWALK_TABLE_UPDT('TCCMS_PROV','PROV_L_CITY,PROV_L_ST,PROV_L_ZIP');
COMMIT;

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = dbms_random.string('l',15) ||'@' || SUBSTR(A.ORIGINAL, INSTR(A.ORIGINAL, '@') + 1)  , 
    A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_PROV' 
AND A.TYPE='PROV_C_EMAIL';

COMMIT;

UPDATE TCCMSMASK.TCCMS_MASK_DTL_TABLE A
SET A.MASKED = SUBSTR(ORIGINAL,1,3) || MASKED_SSN.NEXTVAL , A.MASK_KEY=A.ORG_KEY
WHERE A.TABLE_NAME = 'TCCMS_INDV' 
AND A.TYPE='INDV_C_SSN'
AND MASKED IN (SELECT MASKED FROM TCCMSMASK.TCCMS_MASK_DTL_TABLE B 
WHERE  B.TABLE_NAME = 'TCCMS_INDV'  AND  B.TYPE='INDV_C_SSN'
AND  EXISTS(SELECT 1 FROM UNIQUE_SSN SS WHERE SS.SSN = B.MASKED))



 














