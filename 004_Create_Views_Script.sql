Changed database context to 'ie_ie_cnv'.
--Total Finction in 02 server :         74

--DROP VIEW LAND.VW_DC_DEPEND_CARE_DEDUCTIONS_LAMI_EXPENSES

CREATE VIEW [LAND].[VW_DC_DEPEND_CARE_DEDUCTIONS_LAMI_EXPENSES]
AS

---***EXPENSES***
--OPEN--
SELECT EXP_PID, 
                   EXP_EFF_DATE, 
				    EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				     dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'DEPENDENTEXPTYPE') EXP_TYPE,				  
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'DEPENDENTCAREVRF') as EXP_V,
				   EXP_AMT,
				   SEQ_ID
--SELECT Count(1)
FROM LAND.LAMI_EXPENSES(NOLOCK) A
Where LTRIM(RTRIM(EXP_TYPE)) IN ( 'DPTC' ,'DPTE' )
AND isnull(EXP_EXPIRE_DATE, getdate()) >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_OPEN_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)

UNION 
--CLOSED--

SELECT EXP_PID, 
                   EXP_EFF_DATE, 
				    EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				     dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'DEPENDENTEXPTYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'DEPENDENTCAREVRF') as EXP_V,
				   EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=EXP_PID
WHERE LTRIM(RTRIM(EXP_TYPE))  IN  ('DPTC' ,'DPTE')
AND EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (
SELECT  EXP_PID, MAX_EXP_EXPIRE_DATE
FROM (
SELECT EXP_PID, ISNULL(MAX(EXP_EXPIRE_DATE),GETDATE()) MAX_EXP_EXPIRE_DATE 
                    FROM LAND.LAMI_EXPENSES(NOLOCK) 
     GROUP BY EXP_PID)  B 
        WHERE A.EXP_PID =B.EXP_PID AND ISNULL(A.EXP_EXPIRE_DATE,GETDATE()) = B.MAX_EXP_EXPIRE_DATE)
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)



UNION ALL

SELECT EXP_PID, 
                   EXP_EFF_DATE, 
				    EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				     dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'DEPENDENTEXPTYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'DEPENDENTCAREVRF') as EXP_V,
				   EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=EXP_PID
WHERE LTRIM(RTRIM(EXP_TYPE))  IN  ('DPTC' ,'DPTE')
AND EXP_EXPIRE_DATE IS NULL
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)



---***LACAP EXPENSES***
UNION 
--OPEN
SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE, 
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				    dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'DEPENDENTEXPTYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'DEPENDENTCAREVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
FROM LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
Where LTRIM(RTRIM(LACAP_EXP_TYPE)) IN ( 'DPTC' ,'DPTE' )
AND ISNULL(LACAP_EXP_EXPIRE_DATE, GETDATE()) >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_OPEN_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)

UNION 
--CLOSED

SELECT LACAP_EXP_PID as EXP_P
ID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE,
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				    dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'DEPENDENTEXPTYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'DEPENDENTCAREVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=LACAP_EXP_PID
WHERE LTRIM(RTRIM(LACAP_EXP_TYPE))  IN  ('DPTC' ,'DPTE')
AND LACAP_EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (
SELECT  LACAP_EXP_PID, MAX_LACAP_EXP_EXPIRE_DATE
FROM (
SELECT LACAP_EXP_PID, ISNULL(MAX(LACAP_EXP_EXPIRE_DATE),GETDATE()) MAX_LACAP_EXP_EXPIRE_DATE 
                    FROM LAND.LAMI_LACAP_EXPENSES(NOLOCK) 
     GROUP BY LACAP_EXP_PID)  B 
        WHERE A.LACAP_EXP_PID =B.LACAP_EXP_PID AND ISNULL(A.LACAP_EXP_EXPIRE_DATE,GETDATE()) = B.MAX_LACAP_EXP_EXPIRE_DATE)
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)



UNION 
--CLOSED

SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE,
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				    dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'DEPENDENTEXPTYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'DEPENDENTCAREVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=LACAP_EXP_PID
WHERE LTRIM(RTRIM(LACAP_EXP_TYPE))  IN  ('DPTC' ,'DPTE')
AND LACAP_EXP_EXPIRE_DATE IS NULL
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)







GO
  CREATE VIEW CVTEST.VW_BULK_BENEFIT_ISSUE_SEQ
 AS
 SELECT File_Text FROM CVTEST.BULK_BENEFIT_ISSUE_SEQ

GO
/*
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN Req_datetime VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN Res_datetime VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN Create_dt VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN Update_dt VARCHAR(25)


ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN Create_user_id VARCHAR(250)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN Update_user_id VARCHAR(250)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN ADDRESS VARCHAR(250)

437172642~001080176C01~VARNADO~D~AMIYA~1012200803103~5439~NICOLE WELLS FOR      AMIYA D VARNADO       248 GREEN ST          APT 2                 MANCHESTER NH~~~S~10122008~02012009~02012009~0.0~0.0~~~~~02012009~0.0~N~~2012-07-04 

ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN Application_id VARCHAR(250)

ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN PAY_NM_AND_MAIL_ADD VARCHAR(200)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN Application_id VARCHAR(200)

ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE16 ALTER COLUMN Update_user_id VARCHAR(MAX)





SELECT Count(1) from INFORMATION_SCHEMA.COLUMNS where table_Name = 'ClearanceSummary_SOLQi_TITLE16' and TABLE_SCHEMA = 'PRELAND'
and Column_Name != 'SEQ_ID'

PS: Missing ~ between DOB and ZIP_5, between Appliaction_ID and CREATE_DT amd EOL missing
*/


CREATE VIEW [PRELAND].VW_BULK_ClearanceSummary_SOLQi_TITLE16
AS
select 
INPUT_SSN, INPUT_SURNAME, INPUT_MIDDLENAME, INPUT_GIVENNAME, RECIP_TYPE, DOD_2, PAY_STAT_CD_1, CURR_PAY_STAT_EFF_DT, ELIG_DT, DIR_DEP_IND_2, PAY_NM_AND_MAIL_ADD, PAY_ZIP_5, PAY_ZIP_4, UI_NUM_OF_ENTRIES, UI_TYPE, UI_VERF_CD, UI_START_DT, UI_STOP_DT, UI_AMT, UI_FREQUENCY, UI_CLAIM_NUM, PAY_DT, SSI_GROSS_PAY_AMT_1, PAY_HIST_PAY_DT, SSI_MNTH_ASST_AMT, STATE_SUPP_AMT, FED_LIV_ASSIT_CD, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, 
Application_id, 
Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_SOLQi_TITLE16

GO






--DROP VIEW [LAND].[VW_HE_CASE_PARTICIPANTS_INFO] 

create VIEW [LAND].[VW_HE_CASE_PARTICIPANTS_INFO] 
AS
SELECT 
SEQ_ID,
AP_FIRST_NAME AS FIRST_NAME,
AP_CITY AS ADDR_CITY,
dbo.F_GET_REFERENCE_DATA ('STTE', LTRIM(RTRIM(AP_STATE)),'STATE') AS ADDR_ST_CD,
Substring(AP_ZIP,1,5) AS ADDR_ZIP5,
Substring(AP_ZIP,6,9) AS ADDR_ZIP4,
AP_ADDR1 AS ADDR_LINE1,
AP_ADDR2 AS ADDR_LINE2,
AP_PHONE_NUMBER AS PHONE_NUM, 
AP_FAX_NUMBER AS FAX_NUM 
FROM LAND.AP_MASTER(NOLOCK)

UNION ALL

SELECT		
SEQ_ID,
APPELLANT_REP_NAME1 AS FIRST_NAME,
APPELLANT_REP_CITY1 AS ADDR_CITY,
dbo.F_GET_REFERENCE_DATA ('STTE', LTRIM(RTRIM(AP_STATE)),'STATE') AS ADDR_ST_CD,
Substring(APPELLANT_REP_ZIP1,1,5) AS ADDR_ZIP5,
Substring(APPELLANT_REP_ZIP1,6,9) AS ADDR_ZIP4,
APPELLANT_REP_ADDR11 AS ADDR_LINE1,
APPELLANT_REP_ADDR21 AS ADDR_LINE2,
AP_REP_PHONE_NUMBER1 AS PHONE_NUM,
AP_REP_FAX_NUMBER1 AS FAX_NUM
FROM LAND.AP_MASTER(NOLOCK)

UNION ALL

SELECT 
SEQ_ID,
APPELLANT_REP_NAME2 AS FIRST_NAME,
APPELLANT_REP_CITY2 AS ADDR_CITY,
dbo.F_GET_REFERENCE_DATA ('STTE', LTRIM(RTRIM(AP_STATE)),'STATE') AS ADDR_ST_CD,
Substring(APPELLANT_REP_ZIP2,1,5) AS ADDR_ZIP5,
Substring(APPELLANT_REP_ZIP2,6,9) AS ADDR_ZIP4,
APPELLANT_REP_ADDR12 AS ADDR_LINE1,
APPELLANT_REP_ADDR22 AS ADDR_LINE2,
AP_REP_PHONE_NUMBER2 as PHONE_NUM,
AP_REP_FAX_NUMBER2 AS  FAX_NUM
FROM LAND.AP_MASTER(NOLOCK)

UNION ALL

SELECT 
SEQ_ID,
PAR_REG_AGY_REP_NAME AS FIRST_NAME,
PAR_REG_REP_CITY AS ADDR_CITY,
dbo.F_GET_REFERENCE_DATA ('STTE', LTRIM(RTRIM(AP_STATE)),'STATE') AS ADDR_ST_CD,
Substring(PAR_REG_REP_ZIP,1,5) AS ADDR_ZIP5,
Substring(PAR_REG_REP_ZIP,6,9) AS ADDR_ZIP4,
PAR_REG_REP_ADDR1 AS ADDR_LINE1,
PAR_REG_REP_ADDR2 AS ADDR_LINE2,
AP_REP_PHONE_NUMBER3 AS PHONE_NUM,
AP_REP_FAX_NUMBER3 AS FAX_NUM
FROM LAND.AP_MASTER(NOLOCK)

UNION ALL

SELECT 
SEQ_ID,
AGY_REP_NAME1 AS FIRST_NAME,
AGY_REP_CITY1 AS ADDR_CITY,
dbo.F_GET_REFERENCE_DATA ('STTE', LTRIM(RTRIM(AP_STATE)),'STATE') AS ADDR_ST_CD,
Substring(AGY_REP_ZIP1,1,5) AS ADDR_ZIP5,
Substring(AGY_REP_ZIP1,6,9)  AS ADDR_ZIP4,
AGY_REP_ADDR11 AS ADDR_LINE1,
AGY_REP_ADDR21 AS ADDR_LINE2,
NULL AS  PHONE_NUM,
AGY_REP_FAX1 AS FAX_NUM
FROM LAND.AP_MASTER(NOLOCK)


UNION ALL

SELECT 
SEQ_ID,
AGY_REP_NAME2 AS FIRST_NAME,
AGY_REP_CITY2 AS ADDR_CITY,
dbo.F_GET_REFERENCE_DATA ('STTE', LTRIM(RTRIM(AP_STATE)),'STATE') AS ADDR_ST_CD,
Substring(AGY_REP_ZIP2,1,5) AS ADDR_ZIP5,
Substring(AGY_REP_ZIP2,6,9) AS ADDR_ZIP4,
AGY_REP_ADDR12 AS ADDR_LINE1,
AGY_REP_ADDR22 AS ADDR_LINE2,
NULL AS PHONE_NUM,
AGY_REP_FAX2 AS FAX_NUM
FROM LAND.AP_MASTER(NOLOCK)










GO




--drop view LAND.VW_DC_SHELTER_DEDUCTIONS_LAMI_EXPENSES

 CREATE VIEW [LAND].[VW_DC_SHELTER_DEDUCTIONS_LAMI_EXPENSES]
 AS

 --***EXPENSES**---
 --OPEN--
  SELECT EXP_PID, 
                   EXP_EFF_DATE,
				   EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				   dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'SHELTEREXPENSETYPE') EXP_TYPE,
				   dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'SHELTEREXPENSEVRF') as EXP_V,
				   EXP_AMT, SEQ_ID 
	--SELECT *
  from LAND.LAMI_EXPENSES(NOLOCK) A
WHERE EXP_TYPE IN ('SR/M','SINS','STAX','SRTM','SXOT','SUNA')
AND isnull(EXP_EXPIRE_DATE, Getdate()) >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_OPEN_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)

UNION
--CLOSED with Expr date
SELECT EXP_PID, 
                   EXP_EFF_DATE,
				   EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				   dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'SHELTEREXPENSETYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'SHELTEREXPENSEVRF') as EXP_V,
				   EXP_AMT, SEQ_ID 
--SELECT *
   from LAND.LAMI_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=EXP_PID
WHERE LTRIM(RTRIM(EXP_TYPE))  IN  ('SR/M','SINS','STAX','SRTM','SXOT','SUNA')
AND EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (
SELECT  EXP_PID, MAX_EXP_EXPIRE_DATE
FROM (
SELECT EXP_PID, ISNULL(MAX(EXP_EXPIRE_DATE),GETDATE()) MAX_EXP_EXPIRE_DATE 
                    FROM LAND.LAMI_EXPENSES(NOLOCK) 
     GROUP BY EXP_PID)  B 
        WHERE A.EXP_PID =B.EXP_PID AND ISNULL(A.EXP_EXPIRE_DATE,GETDATE()) = B.MAX_EXP_EXPIRE_DATE)
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)

UNION
--CLOSED with Expr date is Null
SELECT EXP_PID, 
                   EXP_EFF_DATE,
				   EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				   dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'SHELTEREXPENSETYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'SHELTEREXPENSEVRF') as EXP_V,
				   EXP_AMT, SEQ_ID 
--SELECT *
   from LAND.LAMI_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=EXP_PID
WHERE LTRIM(RTRIM(EXP_TYPE))  IN  ('SR/M','SINS','STAX','SRTM','SXOT','SUNA')
AND  A.EXP_EXPIRE_DATE is NULL
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)



/*

SELECT Count(1)
   from PreLAND.LAMI_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=EXP_PID
WHERE LTRIM(RTRIM(EXP_TYPE))  IN  ('SR/M','SINS','STAX','SRTM','SXOT','SUNA')
and LEFT(EXP_EXPIRE_DATE,4) = '2699'
*/

---***LACAP EXPENSES***
UNION 
--OPEN
SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE, 
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				   dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'SHELTEREXPENSETYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'SHELTEREXPENSEVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
FROM LAND.LAMI_LACAP_EXPENSES(NOLOCK) A

Where LTRIM(RTRIM(LACAP_EXP_TYPE))   IN ('SR/M','SINS','STAX','SRTM','SXOT','SUNA')
AND isnull(LACAP_EXP_EXPIRE_DATE, getdate()) >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_OPEN_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)

UNION 
--CLOSED with EXPR date is not null

SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE,
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				   dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'SHELTEREXPENSETYPE') EXP_TYPE,
				 dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'SHELTEREXPENSEVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=LACAP_EXP_PID
WHERE LTRIM(RTRIM(LACAP_EXP_TYPE))   IN ('SR/M','SINS','STAX','SRTM','SXOT','SUNA')
AND LACAP_EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (
SELECT  LACAP_EXP_PID, MAX_LACAP_EXP_EXPIRE_DATE
FROM (
SELECT LACAP_EXP_PID, ISNULL(MAX(LACAP_EXP_EXPIRE_DATE),GETDATE()) MAX_LACAP_EXP_EXPIRE_DATE 
                    FROM LAND.LAMI_LACAP_EXPENSES(NOLOCK) 
     GROUP BY LACAP_EXP_PID)  B 
        WHERE A.LACAP_EXP_PID =B.LACAP_EXP_PID AND ISNULL(A.LACAP_EXP_EXPIRE_DATE,GETDATE()) = B.MAX_LACAP_EXP_EXPIRE_DATE)
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)






UNION 
--CLOSED with EXPR date is not null

SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE,
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				   dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'SHELTEREXPENSETYPE') EXP_TYPE,
				 dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'SHELTEREXPENSEVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=LACAP_EXP_PID
WHERE LTRIM(RTRIM(LACAP_EXP_TYPE))   IN ('SR/M','SINS','STAX','SRTM','SXOT','SUNA')
AND LACAP_EXP_EXPIRE_DATE IS NULL
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)







GO







--DROP  VIEW [LAND].[VW_DC_SUPPORT_DEDUCTIONS_LAMI_EXPENSES]

 CREATE VIEW [LAND].[VW_DC_SUPPORT_DEDUCTIONS_LAMI_EXPENSES]
 AS

---- **EXPENES***---
 --OPEN--
  SELECT EXP_PID, 
                   EXP_EFF_DATE,
				   EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				     dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'SUPPORTEXPENSETYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'SUPPORTDEDUCTIONVRF') as EXP_V,
				  EXP_AMT, SEQ_ID 
	--SELECT *
  from LAND.LAMI_EXPENSES(NOLOCK) A
WHERE EXP_TYPE IN ('PCS1','PCS2','PYMT')
AND EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_OPEN_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)

UNION
--CLOSED--
SELECT EXP_PID, 
                   EXP_EFF_DATE,
				   EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				     dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'SUPPORTEXPENSETYPE') EXP_TYPE,
				   dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'SUPPORTDEDUCTIONVRF') as EXP_V,
				  EXP_AMT, SEQ_ID 
	 --SELECT *
  from LAND.LAMI_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=EXP_PID
WHERE LTRIM(RTRIM(EXP_TYPE))  IN  ('PCS1','PCS2','PYMT')
AND EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (
SELECT  EXP_PID, MAX_EXP_EXPIRE_DATE
FROM (
SELECT EXP_PID, ISNULL(MAX(EXP_EXPIRE_DATE),GETDATE()) MAX_EXP_EXPIRE_DATE 
                    FROM LAND.LAMI_EXPENSES(NOLOCK) 
     GROUP BY EXP_PID)  B 
        WHERE A.EXP_PID =B.EXP_PID AND ISNULL(A.EXP_EXPIRE_DATE,GETDATE()) = B.MAX_EXP_EXPIRE_DATE)
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)

---***LACAP EXPENSES***
UNION 
--OPEN
SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE, 
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				    dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'SUPPORTEXPENSETYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'SUPPORTDEDUCTIONVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
FROM LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
Where LTRIM(RTRIM(LACAP_EXP_TYPE))   IN ('PCS1','PCS2','PYMT')
AND LACAP_EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_OPEN_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)

UNION 
--CLOSED--

SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE,
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				    dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'SUPPORTEXPENSETYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'SUPPORTDEDUCTIONVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=LACAP_EXP_PID
WHERE LTRIM(RTRIM(LACAP_EXP_TYPE))   IN ('PCS1','PCS2','PYMT')
AND LACAP_EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND
 EXISTS (
SELECT  LACAP_EXP_PID, MAX_LACAP_EXP_EXPIRE_DATE
FROM (
SELECT LACAP_EXP_PID, ISNULL(MAX(LACAP_EXP_EXPIRE_DATE),GETDATE()) MAX_LACAP_EXP_EXPIRE_DATE 
                    FROM LAND.LAMI_LACAP_EXPENSES(NOLOCK) 
     GROUP BY LACAP_EXP_PID)  B 
        WHERE A.LACAP_EXP_PID =B.LACAP_EXP_PID AND ISNULL(A.LACAP_EXP_EXPIRE_DATE,GETDATE()) = B.MAX_LACAP_EXP_EXPIRE_DATE)
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)








GO


--DROP VIEW [LAND].[VW_DC_UTILITY_DEDUCTIONS_LAMI_EXPENSES]


CREATE VIEW [LAND].VW_DC_UTILITY_DEDUCTIONS_LAMI_EXPENSES
AS

--**EXPENSES-----
--OPEN--
SELECT EXP_PID, 
                   EXP_EFF_DATE, 
				    EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				     dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				     dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'UTILITYVERIF') as EXP_V,
				   EXP_AMT,
				   SEQ_ID
--SELECT *
FROM LAND.LAMI_EXPENSES(NOLOCK) A
WHERE EXP_TYPE IN ('UTL1','UTL2','UTL3','UTL4','UTL5','UTL6','UONE','SUA1','BUA1','TEL1','BUAP','SUAP','TELP' )
AND ISNULL(EXP_EXPIRE_DATE,GETDATe()) >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_OPEN_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)

UNION
--CLOSED--

SELECT EXP_PID, 
                   EXP_EFF_DATE, 
				    EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				     dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
							  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'UTILITYVERIF') as EXP_V,
				   EXP_AMT,
				   SEQ_ID
--SELECT * 
  from LAND.LAMI_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=EXP_PID
WHERE LTRIM(RTRIM(EXP_TYPE))  IN  ('UTL1','UTL2','UTL3','UTL4','UTL5','UTL6','UONE','SUA1','BUA1','TEL1','BUAP','SUAP','TELP')
AND EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (
SELECT  EXP_PID, MAX_EXP_EXPIRE_DATE
FROM (
SELECT EXP_PID, ISNULL(MAX(EXP_EXPIRE_DATE),GETDATE()) MAX_EXP_EXPIRE_DATE 
                    FROM LAND.LAMI_EXPENSES(NOLOCK) 
     GROUP BY EXP_PID)  B 
        WHERE A.EXP_PID =B.EXP_PID AND ISNULL(A.EXP_EXPIRE_DATE,GETDATE()) = B.MAX_EXP_EXPIRE_DATE)
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)

UNION 



--CLOSED--

SELECT EXP_PID, 
                   EXP_EFF_DATE, 
				    EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				     dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
							  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'UTILITYVERIF') as EXP_V,
				   EXP_AMT,
				   SEQ_ID
--SELECT * 
  from LAND.LAMI_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=EXP_PID
WHERE LTRIM(RTRIM(EXP_TYPE))  IN  ('UTL1','UTL2','UTL3','UTL4','UTL5','UTL6','UONE','SUA1','BUA1','TEL1','BUAP','SUAP','TELP')
AND EXP_EXPIRE_DATE IS NULL
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)


---***LACAP EXPENSES***
UNION 
--OPEN
SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE, 
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				   dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				 dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'UTILITYVERIF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
FROM LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
Where LTRIM(RTRIM(LACAP_EXP_TYPE)) IN ('UTL1','UTL2','UTL3','UTL4','UTL5','UTL6','UONE','SUA1','BUA1','TEL1','BUAP','SUAP','TELP' )
AND ISNULL(LACAP_EXP_EXPIRE_DATE, GETDATE()) >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_OPEN_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)

UNION 
--CLOSED--

SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE,
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
	
			   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				      dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				    dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'UTILITYVERIF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=LACAP_EXP_PID
WHERE LTRIM(RTRIM(LACAP_EXP_TYPE)) IN ('UTL1','UTL2','UTL3','UTL4','UTL5','UTL6','UONE','SUA1','BUA1','TEL1','BUAP','SUAP','TELP' )
AND LACAP_EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (
SELECT  LACAP_EXP_PID, MAX_LACAP_EXP_EXPIRE_DATE
FROM (
SELECT LACAP_EXP_PID, ISNULL(MAX(LACAP_EXP_EXPIRE_DATE),GETDATE()) MAX_LACAP_EXP_EXPIRE_DATE 
                    FROM LAND.LAMI_LACAP_EXPENSES(NOLOCK) 
     GROUP BY LACAP_EXP_PID)  B 
        WHERE A.LACAP_EXP_PID =B.LACAP_EXP_PID AND ISNULL(A.LACAP_EXP_EXPIRE_DATE,GETDATE()) = B.MAX_LACAP_EXP_EXPIRE_DATE)
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)



UNION 
--CLOSED--

SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE,
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				      dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				    dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'UTILITYVERIF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=LACAP_EXP_PID
WHERE LTRIM(RTRIM(LACAP_EXP_TYPE)) IN ('UTL1','UTL2','UTL3','UTL4','UTL5','UTL6','UONE','SUA1','BUA1','TEL1','BUAP','SUAP','TELP' )
AND LACAP_EXP_EXPIRE_DATE IS NULL
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)







GO
CREATE VIEW PRELAND.VW_TEMP_GROUP14_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP14_SEQ

GO
CREATE VIEW PRELAND.VW_BULK_CASE_NOTES
AS
SELECT 
    [IDN_CASE_NOTES] ,
	[CASE_NOTES],
	[UPDATED_TS],

	[UPDATED_STAFF_ID] ,
	[CONTACT_TYPE]  ,
	[CREATED_TS]  ,
	[CREATED_STAFF_ID] ,
	[EVENT_TYPE_CD] ,
	[EVENT_DT] ,
	[CONTACT_NAME] --,	[CASE_NUM]
FROM PRELAND.CASE_NOTES

GO

CREATE VIEW PRELAND.VW_BULK_ClearanceSummary_SOLQI_XREF
AS
SELECT 
INPUT_SSN, INPUT_SSCN, INPUT_SURNAME, INPUT_MIDDLENAME, INPUT_GIVENNAME, INPUT_DOB, ZIP_CODE_5,
ZIP_CODE_4, NUM_LINES_ADDRESS, ADDRESS, SCHED_PAY_DT, LAF_CODE, INITIAL_ENTITLE_DT, SUSP_OR_TERM_DT, NET_MLY_BENEFIT_IF_PAYABLE, SMI_PREMIUM_AMT, SMI_BUYIN_SW, DOD_1, DUAL_ENT_NUM, DUAL_ENT_BIC, MBC_DT, MBC_AMT, MBC_TYPE, DIR_DEP_IND_2, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, 
Application_id, Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_SOLQI_XREF

GO
CREATE VIEW PRELAND.VW_BULK_ClearanceSummary_TIPS
AS
SELECT 
SSN, DOB_DT, EEROR_MESSAGE, PROVIDER_FIRST_NAME, PROVIDER_MIDDLE_NAME, PROVIDER_LAST_NAME, PROVIDER_ID, PAYMENT_DATE, PAYMENT_AMT, 
Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, Application_id, Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_TIPS

GO


--DROP VIEW LAND.VW_ABS_PRNT_FOR_CHD_LINK
CREATE VIEW [LAND].[VW_ABS_PRNT_FOR_CHD_LINK]
AS
/*
Created By: Nawaz
Created date: 01/31/2018
Purpose: To create multiple AP_CHILD_PID records for single AP_PG_PID record.
Used: Used in DC_ABSENT_PARENT table


Change History:
User     date        Change details
=====    =====       ===============
nawaz    1/31/2018   View created 
Venkata  2/2/2018   Modified to exclude null CH_PID and handle nulls 

*/
  
SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID1 AS AP_CHILD_PID,
AP_PATERNITY_EST1 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN1)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN1))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET1)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET1))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED1 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID1 = '' OR AP_CHILD_PID1 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID2 AS AP_CHILD_PID,
AP_PATERNITY_EST2 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN2)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN2))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET2)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET2))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED2 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID2 = '' OR AP_CHILD_PID2 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID3 AS AP_CHILD_PID,
AP_PATERNITY_EST3 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN3)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN3))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET3)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET3))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED3 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID3 = '' OR AP_CHILD_PID3 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID4 AS AP_CHILD_PID,
AP_PATERNITY_EST4 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN4)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN4))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET4)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET4))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED4 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID4 = '' OR AP_CHILD_PID4 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID5 AS AP_CHILD_PID,
AP_PATERNITY_EST5 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN5)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN5))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET5)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET5))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED5 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID5 = '' OR AP_CHILD_PID5 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID6 AS AP_CHILD_PID,
AP_PATERNITY_EST6 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN6)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN6))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET6)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET6))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED6 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID6 = '' OR AP_CHILD_PID6 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID7 AS AP_CHILD_PID,
AP_PATERNITY_EST7 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN7)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN7))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET7)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET7))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED7 as AP_MED_COVERED
,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID7 = '' OR AP_CHILD_PID7 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID8 AS AP_CHILD_PID,
AP_PATERNITY_EST8 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN8)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN8))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET8)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET8))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED8 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID8 = '' OR AP_CHILD_PID8 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID9 AS AP_CHILD_PID,
AP_PATERNITY_EST9 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN9)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN9))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET9)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET9))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED9 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID9 = '' OR AP_CHILD_PID9 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID10 AS AP_CHILD_PID,
AP_PATERNITY_EST10 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN10)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN10))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET10)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET10))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED10 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID10 = '' OR AP_CHILD_PID10 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID11 AS AP_CHILD_PID,
AP_PATERNITY_EST11 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN11)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN11))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET11)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET11))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED11 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID11 = '' OR AP_CHILD_PID11 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID12 AS AP_CHILD_PID,
AP_PATERNITY_EST12 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN12)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN12))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET12)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET12))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED12 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID12 = '' OR AP_CHILD_PID12 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID13 AS AP_CHILD_PID,
AP_PATERNITY_EST13 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN13)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN13))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET13)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET13))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED13 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID13 = '' OR AP_CHILD_PID13 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID14 AS AP_CHILD_PID,
AP_PATERNITY_EST14 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN14)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN14))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET14)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET14))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED14 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID14 = '' OR AP_CHILD_PID14 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID15 AS AP_CHILD_PID,
AP_PATERNITY_EST15 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN15)) = '' THEN NULL ELSE LTR
IM(RTRIM(AP_GOOD_CAUSE_RSN15))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET15)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET15))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED15 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID15 = '' OR AP_CHILD_PID15 is NULL)

UNION ALL

SELECT DISTINCT
AP_PG_PID,
AP_CHILD_PID16 AS AP_CHILD_PID,
AP_PATERNITY_EST16 AS AP_PATERNITY_EST,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_RSN16)) = '' THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_RSN16))  END AS AP_GOOD_CAUSE_RSN,
CASE WHEN LTRIM(RTRIM(AP_GOOD_CAUSE_DET16)) IN ( '', ' ') THEN NULL ELSE LTRIM(RTRIM(AP_GOOD_CAUSE_DET16))  END AS AP_GOOD_CAUSE_DET,
AP_MED_COVERED16 as AP_MED_COVERED,
SEQ_ID AS SEQ_ID
FROM LAND.LAMI_ABSENT_PARENT(NOLOCK)
WHERE NOT (AP_CHILD_PID16 = '' OR AP_CHILD_PID16 is NULL)




GO
CREATE VIEW DPROFILE.[VW_TEMP_GROUP13_SEQ] AS SELECT File_Text FROM DPROFILE.TEMP_GROUP13_SEQ
GO





CREATE VIEW [LAND].[VW_JAS_JB_COMP_FOR_WORC_ACTIVITIES] 
AS

--EDUCATION  --EDUCATION DIRECTLY RELATED TO EMPLOYMENT--
SELECT SEQ_ID, COMP_CASE_ID, 'AE' ACTIVITY_TYPE, 'ERE' ACTIVITY_CD, 'EDUCATION DIRECTLY RELATED TO EMPLOYMENT'  ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EDUCATION  --SECONDARY SCHOOL ATTENDANCE/G.E.D. PREP--
SELECT SEQ_ID, COMP_CASE_ID, 'AE' ACTIVITY_TYPE, 'GED' ACTIVITY_CD, 'SECONDARY SCHOOL ATTENDANCE/G.E.D. PREP' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EDUCATION  --VOCATIONAL EDUCATION--
SELECT SEQ_ID, COMP_CASE_ID, 'AE' ACTIVITY_TYPE, 'VOC' ACTIVITY_CD, 'VOCATIONAL EDUCATION' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EDUCATION  --JOB SKILLS TRAINING DIRECTLY RELATED TO EMPLOYMENT--
SELECT SEQ_ID, COMP_CASE_ID, 'AE' ACTIVITY_TYPE, 'JRE' ACTIVITY_CD, 'JOB SKILLS TRAINING DIRECTLY RELATED TO EMPLOYMENT' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EDUCATION  --POST SECONDARY EDUCATION--
SELECT SEQ_ID, COMP_CASE_ID, 'AE' ACTIVITY_TYPE, 'PSE' ACTIVITY_CD, 'POST SECONDARY EDUCATION' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

--------------------------------------------------------------------------------

UNION ALL
--EMPLOYMENT --EMPLOYMENT--
SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE, 'EMP' ACTIVITY_CD, 'EMPLOYMENT' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EMPLOYMENT --WORK EXPERIENCE PROGRAM--
SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE, 'WEP' ACTIVITY_CD,  'WORK EXPERIENCE PROGRAM' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EMPLOYMENT --COMMUNITY SERVICE PROGRAM--
SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE, 'CSP' ACTIVITY_CD, 'COMMUNITY SERVICE PROGRAM' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END
_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EMPLOYMENT --ON THE JOB TRAINING--
SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE, 'OJT' ACTIVITY_CD,  'ON THE JOB TRAINING' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EMPLOYMENT --PROVISION OF CHILD CARE--
SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE, 'PCC' ACTIVITY_CD, 'PROVISION OF CHILD CARE' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EMPLOYMENT --JOB SEARCH/JOB READINESS--
SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE, 'JSR' ACTIVITY_CD, 'JOB SEARCH/JOB READINESS' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EMPLOYMENT --PARENTING SKILLS--
SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE, 'PST' ACTIVITY_CD, 'PARENTING SKILLS' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EMPLOYMENT --DRUG/ALCOHOL REHABILITATION--
SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE, 'REH' ACTIVITY_CD, 'DRUG/ALCOHOL REHABILITATION' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--EMPLOYMENT --MENTAL HEALTH COUNSELING--
SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE, 'MHC' ACTIVITY_CD, 'MENTAL HEALTH COUNSELING' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

--------------------------------------------------------------------------------

UNION ALL
--OTHER --TREATMENT ACTIVITY--
SELECT SEQ_ID, COMP_CASE_ID, 'AO' ACTIVITY_TYPE, 'TRT' ACTIVITY_CD, 'TREATMENT ACTIVITY' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--OTHER --FAMILY LIFE SKILLS--
SELECT SEQ_ID, COMP_CASE_ID, 'AO' ACTIVITY_TYPE, 'FLS' ACTIVITY_CD, 'FAMILY LIFE SKILLS'  ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 

ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--OTHER --ACCESSING WORK SUPPORT--
SELECT SEQ_ID, COMP_CASE_ID, 'AO' ACTIVITY_TYPE, 'AWS' ACTIVITY_CD, 'ACCESSING WORK SUPPORT'  ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--OTHER --OTHER - JOB SEARCH / JOB READINESS--
SELECT SEQ_ID, COMP_CASE_ID, 'AO' ACTIVITY_TYPE, 'JSR' ACTIVITY_CD, 'OTHER - JOB SEARCH / JOB READINESS'  ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--OTHER --OTHER - VOCATIONAL EDUCATION--
SELECT SEQ_ID, COMP_CASE_ID, 'AO' ACTIVITY_TYPE, 'VOC' ACTIVITY_CD, 'OTHER - VOCATIONAL EDUCATION'  ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--OTHER --OTHER - NON-MEDICAL CARE FOR EXTENDED FAMILY MEMBERS--
SELECT SEQ_ID, COMP_CASE_ID, 'AO' ACTIVITY_TYPE, 'NMC' ACTIVITY_CD,  'OTHER - NON-MEDICAL CARE FOR EXTENDED FAMILY MEMBERS' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--OTHER --OTHER - JURY DUTY OR COURT DATE--
SELECT SEQ_ID, COMP_CASE_ID, 'AO' ACTIVITY_TYPE, 'JCD' ACTIVITY_CD, 'OTHER - JURY DUTY OR COURT DATE' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--OTHER --OTHER - MEETINGS WITH SOCIAL SERVICES AGENCIES--
SELECT SEQ_ID, COMP_CASE_ID, 'AO' ACTIVITY_TYPE, 'SSA' ACTIVITY_CD, 'OTHER - MEETINGS WITH SOCIAL SERVICES AGENCIES' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

UNION ALL
--OTHER --OTHER - MEETINGS WITH SCHOOL REGARDING CHILD'S ISSUES--
SELECT SEQ_ID, COMP_CASE_ID, 'AO' ACTIVITY_TYPE, 'MCI' ACTIVITY_CD, 'OTHER - MEETINGS WITH SCHOOL REGARDING CHILDS ISSUES' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

--------------------------------------------------------------------------------

UNION ALL
--ASSESMENT --ASSESMENT--
SEL
ECT SEQ_ID, COMP_CASE_ID, 'AA' ACTIVITY_TYPE, 'ASS' ACTIVITY_CD, 'ASSESMENT' ACTIVITY_NAME,
ED_ASSESS_STATUS STATUS, 
ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 
ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 
ED_ASSESS_END_DATE as END_DATE,  
ED_ASSESS_SCHED_HRS as SCHED_HRS, 
ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,
--ED_ASSESS_PARTICIPATION as PARTICIPATION, 
ED_ASSESS_PROGRESS AS PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)

--------------------------------------------------------------------------------




GO
CREATE VIEW PRELAND.VW_BULK_ClearanceSummary_UCB
AS
SELECT 
FIRST_NAME, LAST_NAME, MIDDLE_NAME, BYB, BYE, 
UNKONWN1,
ADDR_LINE_1, ADDR_LINE_2, CITY, STATE, ZIP, CLAIM_TYPE, 
UNKONWN2,
UNKONWN3,

END_DT, START_DT, WBA, MBA, BENEFIT_BAL, OVERPAID_AMT, 
UNKONWN4,
PAYMENT_AMT, PAYMENT_ISSUE_DT, WEEK_END_DT, EMPLOYER_ID, EMPLOYER_NAME, 
UNKONWN5,
MAILING_ADDR_1, MAILING_ADDR_2, MAILING_CITY, MAILING_STATE, MAILING_ZIP, 
UNKONWN6,
PHYSICAL_ADDR_1, PHYSICAL_ADDR_2, PHYSICAL_CITY, PHYSICAL_STATE, PHYSICAL_ZIP, TELEPHONE_NM, EMAIL_ADDR, 
UNKONWN7, 
QUARTER_END_DT, 
WAGE_AMT, EXTENDED_BENEFITS, TRA, CHK, FED_WITHHOLD, CHILDSUPPORT, STIMULUS_AMOUNT, STIMULUS_WITHHOLD, DATE_PROCESSED
, Unique_transaction_id
, Req_datetime
, Res_datetime, Indv_id, Application_id, Create_dt, Create_user_id, Update_dt, Update_user_id
FROM PRELAND.ClearanceSummary_UCB

GO
CREATE VIEW PRELAND.VW_TEMP_BULK_LOAD_SEQ AS SELECT File_Text FROM PRELAND.TEMP_BULK_LOAD_SEQ;

GO
/*

ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN INDV_ID VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Update_dt VARCHAR(200)
ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Update_user_id VARCHAR(4000)

ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Create_user_id VARCHAR(200)
ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Application_id VARCHAR(200)


Go

*/
--SELECT * from INFORMATION_SCHEMA.COLUMNS where table_Name = 'ClearanceSummary_PARISVA' and TABLE_SCHEMA = 'PRELAND' AND COLUMN_NAME != 'SEQ_ID'
--PS: ~ missing between Application_id, Create_dt
--File has 106 ~


CREATE VIEW PRELAND.VW_BULK_ClearanceSummary_PARISVA
AS
SELECT 
CLIENT_SSN, CLIENT_SURNAME, CLIENT_FIRST_NAME, CLIENT_DATE_OF_BIRTH, FILE_DT, STATE_CD, STATE_OPTIONAL_DATA, CLIENT_LOCATOR_CODE, CASE_NUM, FILE_NUMBER, VETERAN_SSN, BENEFICIARY_SSN, APPORTIONEE_SSN, VETERAN_SSN_VER_IND, BENEFICIARY_SSN_VER_IND, PAYEE_TYPE_CD, AWARD_TYPE_CD, AWARD_LINE_TYPE_CD, AWARD_STATUS_CD, GENDER_CD, LAST_NAME, FIRST_NAME, MIDDLE_NAME, BENEFICIARY_DOB, VET_AA_CD, SPOUSE_AA_CD, STATION_NUM, SPOUSE, MINOR_CHILD, SCHOOL_CHILD, HELPLESS_CHILD, PARENT, COMBINED_DEG, ENTITLE_TYPE_CD, CHANGE_REASON1, CHANGE_REASON2, CHANGE_REASON, SUSPENSE_REASON, LAST_PAYMENT_DT, EFFECTIVE_DT, GROSS_AMT, NET_AWARD_AMT, PAYMENT_AMT, FREQUENCY_PAY_TYP_CD, IVAP_AMT, BENEFICIARY_ANNUAL_WAGES_AMT, BENEFICIARY_ANNUAL_INS_AMT, BENEFICIARY_ANNUAL_INT_AMT, BENEFICIARY_ANNUAL_SS_AMT, BENEFICIARY_ANNUAL_CSR_AMT, BENEFICIARY_ANNUAL_MLTY_AMT, BENEFICIARY_ANNUAL_RRB_AMT, BENEFICIARY_ANNUAL_BL_AMT, BENEFICIARY_REST_ANNUAL_AMT, BENEFICIARY_REST_EXC_AMT, SPOUSE_ANNUAL_WAGES_AMT, SPOUSE_ANNUAL_INS_AMT, SPOUSE_ANNUAL_INT_AMT, SPOUSE_ANNUAL_SS_AMT, SPOUSE_ANNUAL_CSR_AMT, SPOUSE_ANNUAL_MLTY_AMT, SPOUSE_ANNUAL_RRB_AMT, SPOUSE_ANNUAL_BL_AMT, SPOUSE_REST_ANNUAL_AMT, SPOUSE_REST_EXC_AMT, MEDICAL_EXPENSES_AMT, EDU_EXP_AMT, LAST_EXP_AMT, HARDSGIP_AMT, RCVBL, RCVBL_AMT, MONTHYLY_DEDUCTIONS, DEDUCTION_AMT, PROCEEDS, PROCEEDS_AMT, ADDR_TYPE_IND, ADDR_FID, ADDR_FID_TYPE, ADDR_NAME_BENEFICIARY, CORP_FMT_ADDR_LINE1, CORP_FMT_ADDR_LINE2, CORP_FMT_ADDR_LINE3, CORP_FMT_CITY_NAME, CORP_FMT_STATE_NAME, CORP_FMT_ZIP_PREFIX, CORP_FMT_ZIP_SUFFIX, CORP_FMT_CNTRY_TYPE_NAME, CORP_FMT_FRGN_POSTAL_CD, CORP_FMT_PROVINCE_NAME, CORP_FMT_TERRITORY_NAME, CORP_FMT_MILITARY_POSTAL_TYPE, CORP_FMT_MILITARY_POSTOFF, BDN_ADDRESS_1, BDN_ADDRESS_2, BDN_ADDRESS_3, BDN_ADDRESS_4, BDN_ADDRESS_5, BDN_ADDRESS_6, BDN_ZIP
, Unique_transaction_id
, Req_datetime, Res_datetime, Indv_id, Application_id,
 Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_PARISVA

GO


CREATE VIEW PRELAND.VW_LAMI_MEMMBER_SANCTIONS
AS
SELECT MEM_PID, MEM_SSN, MEM_NAME_FIRST, MEM_NAME_LAST, MEM_NAME_MI, MEM_NAME_TTL, MEM_DATE_OF_BIRTH, MEM_LAST_UPDT_DTTM, MEM_LAST_UPDT_USER, MEM_PARISH, MEM_DATE_OF_DEATH, SAN_PGM_CAT, SAN_PID, SAN_EFF_DATE, SAN_EFF_DATE_COMPL, SAN_DECISION_DATE, SAN_VIOL_CNT, SAN_VIOL_CODE, SAN_EXPIRE_DATE, SAN_FNS_ACT_IND, SAN_FNS_CHG_DT, SAN_DECISION_DATE_PREV, SAN_VIOL_CNT_PREV, SAN_LAST_UPDT_DTTM, SAN_LAST_UPDT_USER, SAN_REAS_CODE, SAN_SEQ, SAN_FNS_INTERFACE_IND, SAN_PROC_DATE, SAN_EXPIRE_DATE_COMPL
FROM [PRELAND].[LAMI_MEMMBER_SANCTIONS]
GO

/*

ALTER TABLE [PRELAND].ClearanceSummary_CAPS ALTER COLUMN INDV_ID VARCHAR(255)

ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Update_dt VARCHAR(200)
ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Update_user_id VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_CAPS ALTER COLUMN Create_user_id VARCHAR(255)

ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Application_id VARCHAR(200)


Go

*/
--SELECT * from INFORMATION_SCHEMA.COLUMNS where table_Name = 'ClearanceSummary_PARISVA' and TABLE_SCHEMA = 'PRELAND' AND COLUMN_NAME != 'SEQ_ID'
--PS: ~ missing between Application_id, Create_dt
--File has 106 ~

--null~null~MORGAN SWAFFORD~659099154~09082003~S~21~127~18.5~2.18~60~166.12~01012012~01312012~~~2012-01-04 06:02:05.009~2012-01-05 06:57:23.045~003436256~000065644~2012-01-04 06:02:05.009~CV~2012-01-04 06:02:05.009~CV

--ALTER TABLE PRELAND.ClearanceSummary_CAPS 
CREATE VIEW [PRELAND].[VW_BULK_ClearanceSummary_CAPS]
AS
SELECT 
CID, PID, CHILD_NAME, ID, DOB, CARE_IND, MAJOR_CD, SERVICE_UNIT, CERT_RATE, ACT_RATE, AGCY_PYMT_PCT, MON_PAYMENT, SERVICE_PERIOD_START, SERVICE_PERIOD_END, STATUS_IND, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, Application_id, Create_dt, Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_CAPS


GO
CREATE VIEW LAND.VW_WC_EMPLOYMENT_PART_HRS_JAS_JB_COMPONENT
AS

--Private 
SELECT 'PR' EMPL_TYPE, COMP_CASE_ID, LAMI_PID, PRIV_EMPL_STATUS, PRIV_EMPL_BEGIN_DATE, PRIV_EMPL_END_DATE, PRIV_EMPL_ACTUAL_HRS, PRIV_EMPL_PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK) A  
JOIN LAND.JAS_JB_MEMBERS_FILE(NOLOCK) B ON A.COMP_CASE_ID = B.CASE_ID
WHERE PRIV_EMPL_ACTUAL_HRS >0 

UNION ALL
--Public 
SELECT 'PU' EMPL_TYPE, COMP_CASE_ID, LAMI_PID, PUBL_EMPL_STATUS, PUBL_EMPL_BEGIN_DATE, Publ_EMPL_END_DATE, PUBL_EMPL_ACTUAL_HRS, PUBL_EMPL_PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK) A  
JOIN LAND.JAS_JB_MEMBERS_FILE(NOLOCK) B ON A.COMP_CASE_ID = B.CASE_ID
WHERE PUBL_EMPL_ACTUAL_HRS >0 

UNION ALL
--Unsubsidize 
SELECT 'US' EMPL_TYPE, COMP_CASE_ID, LAMI_PID, JB_UNSUP_EMP_STATUS, NULL, NULL,  JB_UNSUP_EMP_HRS, NULL PUBL_EMPL_PROGRESS
FROM LAND.JAS_JB_COMPONENT(NOLOCK) A  
JOIN LAND.JAS_JB_MEMBERS_FILE(NOLOCK) B ON A.COMP_CASE_ID = B.CASE_ID
WHERE JB_UNSUP_EMP_HRS >0 


GO

/*

COLUMNS: HOLIDAY_ABSENCE_DATE AND HOLIDAY_ABSENCE_HOURS 
TABLE: JAS_JB_COMPONENT 
*/
CREATE VIEW LAND.VW_JAS_JB_COMPONENT_HOLIDAY_ABSENCE_DATA
AS
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE1 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS1 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE2 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS2 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE3 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS3 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE4 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS4 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 


SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE5 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS5 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE6 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS6 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE7 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS7 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE8 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS8 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 

SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE9 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS9 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE10 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS10 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE11 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS11 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE12 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS12 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 

SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE13 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS13 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE14 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS14 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE15 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS15 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE16 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS16 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 


SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE17 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS17 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE18 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS18 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION 
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE19 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS19 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)
UNION
SELECT COMP_CASE_ID, HOLIDAY_ABSENCE_DATE20 as HOLIDAY_ABSENCE_DATE, HOLIDAY_ABSENCE_HOURS20 as HOLIDAY_ABSENCE_HOURS
FROM LAND.JAS_JB_COMPONENT(NOLOCK)


GO
CREATE VIEW PRELAND.VW_TEMP_GROUP12_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP12_SEQ;

GO


CREATE VIEW [LAND].[VW_LAMI_INCOME_EARNED]
AS
--1
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET1 INCE_AMT_DET, INCE_HRS_DET1 INCE_HRS_DET
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET1 > 0
--2
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET2, INCE_HRS_DET2
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET2 > 0

--3
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET3, INCE_HRS_DET3
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET3 > 0

--4
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET4,INCE_HRS_DET4
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET4 > 0

--5
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET5, INCE_HRS_DET5
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET5 > 0

--6
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET6, INCE_HRS_DET6
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET6 > 0

--7
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET7, INCE_HRS_DET7
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET7 > 0

--8
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET8, INCE_HRS_DET8
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET8 > 0

--9
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET9, INCE_HRS_DET9
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET9 > 0

--10
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET10, INCE_HRS_DET10
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET10 > 0




GO


--DROP VIEW [LAND].[VW_LAMI_INCOME_UNEARNED] 

CREATE VIEW [LAND].[VW_LAMI_INCOME_UNEARNED] 
AS
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET1 INCU_AMT_DET
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET1 > 0
UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET2
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET2 > 0

UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET3
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET3 > 0

UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET4
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET4 > 0


UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET5
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET5 > 0


UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET6
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET6 > 0



UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET7
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET7 > 0



UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET8
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET8 > 0



UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET9
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET9 > 0



UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET10
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET10 > 0






GO


--387822~"kknotts"~"CSU420"~"439553975"~"2017-05-22 15:59:00.15"~"2017-05-22"~"N"~"NM"
--ALTER TABLE [PRELAND].LWC_AUDIT_TB ALTER COLUMN CREATE_TS VARCHAR(200)

CREATE VIEW PRELAND.VW_LWC_AUDIT_TB
AS
SELECT 
AUDIT_ID, USER_ID, RACF_ID, AUDIT_SSN, CREATE_TS, AUDIT_DATE, MATCH_FOUND, RESPONSE_CD
FROM [PRELAND].LWC_AUDIT_TB

GO
/*

ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN INDV_ID VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Update_dt VARCHAR(200)
ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Update_user_id VARCHAR(4000)

ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Create_user_id VARCHAR(200)
ALTER TABLE [PRELAND].ClearanceSummary_PARISVA ALTER COLUMN Application_id VARCHAR(200)


Go

*/


--70
--SELECT * from INFORMATION_SCHEMA.COLUMNS Where Table_Name = 'ClearanceSummary_WorkNumber'

--ALTER TABLE [PRELAND].ClearanceSummary_WorkNumber ALTER COLUMN Update_user_id VARCHAR(2000)

--~MALORY~ALLISON~S~439851239~10108~Wal-Mart~~~~~~20110516000000~0.0~12302011~01052012~51.99~397.72~0.0~~~~~~~~~~~~~~~Active~~~~~~~~~~~~~~~~~~~~~~~~~~~~2012-01-03 10:29:25.553~2012-01-03 10:29:27.309~000934674~004979864~2012-01-03 10:29:25.553~CV~2012-01-03 10:29:25.553~CV

--ALTER TABLE PRELAND.ClearanceSummary_WorkNumber 
CREATE VIEW PRELAND.VW_BULK_ClearanceSummary_WorkNumber
AS
SELECT 
TRANSACTION_ID, FIRST_NAME, MIDDLE_NAME, LAST_NAME, SSN, EMPLOYER_CODE, EMPLOYER_NAME, EMPLOYER_NAME2, STATUS_MESSAGE, LAST_PAY_PERIOD, ERROR_STATUS_CODE, ERROR_DESCRIPTION, EMP_RECENT_HIRE_DATE, OVERTIME, END_DATE, PAY_DATE, HRS_WORKED, GROSS_PAY, NET_PAY, DOB, EMP_POS, EMP_ADDR1, EMP_ADDR2, EMP_CITY, EMP_STATE, EMP_ZIP, EMP_PHN, EMP_DIV_CODE, LOC_ADDR1, LOC_ADDR2, LOC_CITY, LOC_STATE, LOC_ZIP, EMP_STATUS, EMP_ORG_HIRE_DATE, TERMINATION_CODE, TERMINATION_REASON, LEN_OF_SERVICE, TERMINATION_DATE, 
EMPLOYER_NAME1, --EMPLOYER_NAME3, 
EMPLOYER_ADDR_1, EMPLOYER_ADDR_2, EMPLOYER_CITY, EMPLOYER_STATE, EMPLOYER_ZIP, EMPLOYER_FED_ID, RATE_OF_PAY, PAY_FREQ_DESC, PAY_FREQ_CODE, AVG_HRS_WORKED, PAY_PERIOD_FREQ_DESC, PAY_PERIOD_FREQ_CODE, YTD_BASE, YTD_OVRTIME, YTD_COMM, YTD_BONUS, YTD_OTHER, YTD_TOTAL, START_DATE, YTD_GROSS_PAY, 
Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, Application_id, Create_dt, Create_user_id, Update_dt, Update_user_id


FROM [PRELAND].ClearanceSummary_WorkNumber

GO

--DROP VIEW [LAND].[VW_DC_UNEARNED_INCOME_LAMI_INCOME_UNEARNED]

CREATE VIEW [LAND].[VW_DC_UNEARNED_INCOME_LAMI_INCOME_UNEARNED]
AS


SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET1 INCU_AMT_DET, DBO.F_GET_EMP_PAYMENT_DATE(INCU_EFF_DATE,0,INCU_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET1 > 0
UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET2, DBO.F_GET_EMP_PAYMENT_DATE(INCU_EFF_DATE,1,INCU_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET2 > 0

UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET3, DBO.F_GET_EMP_PAYMENT_DATE(INCU_EFF_DATE,2,INCU_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET3 > 0

UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET4, DBO.F_GET_EMP_PAYMENT_DATE(INCU_EFF_DATE,3,INCU_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET4 > 0


UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET5, DBO.F_GET_EMP_PAYMENT_DATE(INCU_EFF_DATE,4,INCU_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET5 > 0


UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET6, DBO.F_GET_EMP_PAYMENT_DATE(INCU_EFF_DATE,5,INCU_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET6 > 0



UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET7, DBO.F_GET_EMP_PAYMENT_DATE(INCU_EFF_DATE,6,INCU_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET7 > 0



UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET8, DBO.F_GET_EMP_PAYMENT_DATE(INCU_EFF_DATE,7,INCU_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET8 > 0



UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET9, DBO.F_GET_EMP_PAYMENT_DATE(INCU_EFF_DATE,8,INCU_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET9 > 0



UNION ALL
SELECT SEQ_ID, INCU_TYPE, INCU_V, INCU_EFF_DATE, INCU_EXPIRE_DATE, INCU_FREQ,  INCU_PID, INCU_DETAIL_OCCURS, INCU_AMT_DET10, DBO.F_GET_EMP_PAYMENT_DATE(INCU_EFF_DATE,9,INCU_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_UNEARNED(NOLOCK)
WHERE INCU_AMT_DET10 > 0





GO
CREATE VIEW DPROFILE.VW_TEMP_GROUP1_SEQ AS SELECT File_Text FROM DPROFILE.TEMP_GROUP1_SEQ;

GO

--DROP  VIEW [LAND].[VW_LATEST_BENEFIT_DATA]
CREATE VIEW [LAND].[VW_LATEST_BENEFIT_DATA]
as

--Get the  latest monthly budget record. 


Select A.BD_CID as BD_CID, A.BD_PGM_CAT, A.BD_EFF_DATE, A.BD_CAT_ELIG_IND, A.BD_BENE_TYPE, A.BD_GRANT_AMT  -- IE-7431 ADDED BD_GRANT_AMT 
From LAND.LAMI_BENEFIT_DATA(NOLOCK) A
JOIN 
(
SELECT  BD_CID, BD_PGM_CAT, MAX(BD_EFF_DATE)  BD_EFF_DATE
FROM LAND.LAMI_BENEFIT_DATA(NOLOCK) B  
GROUP  BY BD_CID, BD_PGM_CAT
) B ON  A.BD_CID   =B.BD_CID    AND A.BD_PGM_CAT = B.BD_PGM_CAT AND A.BD_EFF_DATE = B.BD_EFF_DATE




GO
/*

ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN CLIENT_DOB VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN FILE_DT VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN LAST_EBT_ACCESS_DT VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN LAST_EBT_ACCESS_DT VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN Indv_id VARCHAR(9)


ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN Update_user_id VARCHAR(50)


ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN Req_datetime VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN ReS_datetime VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN Update_dt VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN Application_id VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN STATE_CONTACT_EMAIL VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN Update_user_id VARCHAR(2000)

ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN Create_dt VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_NAC ALTER COLUMN Update_dt VARCHAR(25)


ALTER VIEW [PRELAND].[VW_ClearanceSummary_NAC]
AS
SELECT 
CASE_STATE, CASE_BNFT_TYPE, CASE_ID, CLIENT_ID, CLIENT_LAST_NAME, CLIENT_FIRST_NAME, CLIENT_MID_NAME, BENEFIT_MONTH, CLIENT_ELIG_STATUS, CLIENT_ELIG_DATE, STATE_CONTACT_NAME, STATE_CONTACT_PHN, STATE_CONTACT_EMAIL, LEXID_SCORE, MATCH_CODE
, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, Application_id, --Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_NAC

GO



SELECT Count(1) from INFORMATION_SCHEMA.COLUMNS where table_Name = 'ClearanceSummary_NAC' and TABLE_SCHEMA = 'PRELAND'
and Column_Name != 'SEQ_ID'


*/
CREATE VIEW [PRELAND].VW_BULK_ClearanceSummary_NAC
AS
SELECT 
CASE_STATE, CASE_BNFT_TYPE, CASE_ID, CLIENT_ID, CLIENT_LAST_NAME, CLIENT_FIRST_NAME, CLIENT_MID_NAME, BENEFIT_MONTH, CLIENT_ELIG_STATUS, CLIENT_ELIG_DATE, STATE_CONTACT_NAME, STATE_CONTACT_PHN, STATE_CONTACT_EMAIL, LEXID_SCORE, MATCH_CODE
, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, Application_id--, Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_NAC

GO
CREATE VIEW DPROFILE.VW_TEMP_GROUP11_SEQ AS SELECT File_Text FROM DPROFILE.TEMP_GROUP11_SEQ;

GO
CREATE VIEW PRELAND.VW_LEGACY_DATA_PROFILING_RESULTS
AS

SELECT PROFILING_ID, CID as CASE_ID, CASE_STATUS, PROFILE_DESCRIPTION, PROFILING_TYPE, TABLE_NAME, EXTRACT_FILE_DATE, ISSUE_COLUMN_NAME, ISSUE_COLUMN_VALUE, PARISH_CODE, PARISH_DESC, LEGACY_DP_LAMI_HOH_ID as SEQ_ID, HOH_PID as MEM_PID
FROM PRELAND.LEGACY_DP_LAMI_HOH

UNION 
SELECT PROFILING_ID, CID, CASE_STATUS, PROFILE_DESCRIPTION, PROFILING_TYPE, TABLE_NAME, EXTRACT_FILE_DATE, ISSUE_COLUMN_NAME, ISSUE_COLUMN_VALUE, PARISH_CODE, PARISH_DESC, LEGACY_DP_LEGACY_DP_LAMI_CASE_ID, NULL
FROM PRELAND.LEGACY_DP_LAMI_CASE


UNION 
SELECT PROFILING_ID, CID, CASE_STATUS, PROFILE_DESCRIPTION, PROFILING_TYPE, TABLE_NAME, EXTRACT_FILE_DATE, ISSUE_COLUMN_NAME, ISSUE_COLUMN_VALUE, PARISH_CODE, PARISH_DESC, LEGACY_DP_LAMI_CASE_ADDRESS_ID, NULL
FROM PRELAND.LEGACY_DP_LAMI_CASE_ADDRESS


UNION 
SELECT PROFILING_ID, CID, CASE_STATUS, PROFILE_DESCRIPTION, PROFILING_TYPE, TABLE_NAME, EXTRACT_FILE_DATE, ISSUE_COLUMN_NAME, ISSUE_COLUMN_VALUE, PARISH_CODE, PARISH_DESC, LEGACY_DP_LAMI_CASE_PROGRAM_ID, NULL
FROM PRELAND.LEGACY_DP_LAMI_CASE_PROGRAM


UNION 
SELECT PROFILING_ID, NULL CID, CASE_STATUS, PROFILE_DESCRIPTION, PROFILING_TYPE, TABLE_NAME, EXTRACT_FILE_DATE, ISSUE_COLUMN_NAME, ISSUE_COLUMN_VALUE, PARISH_CODE, PARISH_DESC, LEGACY_DP_LAMI_MEMBER_ID, NULL
FROM PRELAND.LEGACY_DP_LAMI_MEMBER


--ALTER TABLE PRELAND.LEGACY_DP_LAMI_MEMBER ADD LEGACY_DP_LAMI_MEMBER_ID INT IDENTITY PRIMARY KEY

GO

/*

ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN CLIENT_DOB VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN FILE_DT VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN LAST_EBT_ACCESS_DT VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN LAST_EBT_ACCESS_DT VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN Indv_id VARCHAR(9)


ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN Update_user_id VARCHAR(50)


ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN Req_datetime VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN ReS_datetime VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN Update_dt VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN Application_id VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN FIN_SUMM_CASE_NUM VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN Create_dt VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_LASES ALTER COLUMN Update_dt VARCHAR(25)


GO



SELECT Count(1) from INFORMATION_SCHEMA.COLUMNS where table_Name = 'ClearanceSummary_LASES' and TABLE_SCHEMA = 'PRELAND'
and Column_Name != 'SEQ_ID'


*/


CREATE VIEW [PRELAND].VW_BULK_ClearanceSummary_LASES
AS
SELECT 
INPUT_SSN, IN_MBR_MEMBER_NUM, IN_MBR_SSN, IN_MBR_LAST_NAME, IN_MBR_FIRST_NAME, IN_MBR_MIDDLE_NAME, IN_MBR_SUFFIX, NOMATCH_MSG, GRT_HIST_GRANT_AMT, GRT_HIST_MONTH_DATE_COMP, GRT_HIST_GRANT_TYPE, ARREARS_TOTALS, FIN_SUMM_MONTH_DATE_COMP, FIN_SUMM_PA_STATUS, FIN_SUMM_CASE_NUM, FIN_SUMM_PAYEE_REFUND_AMT, FIN_SUMM_REFUND_CODE, FIN_SUMM_COLLECT_AMT, FIN_SUMM_OBLIG_AMT, FIN_SUMM_REIMBURSE_AMT, FIN_SUMM_ARREARS_TOT_AMT, FIN_SUMM_ARREARS_APPLIED_AMT, FIN_SUMM_FEES_AMT, FIN_SUMM_DATA_Y_N, INPUT_MBR_SSN, INPUT_MBR_LAST_NAME, INPUT_MBR_FIRST_NAME, INPUT_MBR_MIDDLE_NAME, INPUT_MBR_SUFFIX, OUTPUT_MBR_SSN, OUTPUT_MBR_LAST_NAME, OUTPUT_MBR_FIRST_NAME, OUTPUT_MBR_MIDDLE_NAME, OUTPUT_MBR_SUFFIX, OUTPUT_AP_AR_IND
, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, Application_id, Create_dt
, Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_LASES

GO
CREATE VIEW PRELAND.VW_BULK_LCJ_CS_RCRDS_TB
AS
SELECT case_ID, CS_RVW_CD, SMPL_SQ, PRG_TYP, PRSH, RGN, CS_LD, WRKR, SSNS, INTK_CS_WRKR, WRKR_OFF
FROM PRELAND.LCJ_CS_RCRDS_TB



GO
CREATE VIEW PRELAND.VW_BULK_ClearanceSummary_eDRS
AS
SELECT DISQUAL_ID, SSN, ALTID_TYPE_ID, ALTID_TYPE_NAME, ALTID_NUMBER, ALTID_ISSUE_CNTRY, 
LAST_NAME, FIRST_NAME, MIDDLE_INITIAL, DOB, SEX, SUFFIX, DISQ_LEVEL, DECISION_DT, START_DT, PENALTY_PERIOD, 
OFFENSE_CD, OFFENSE_DESC, STATE_REF_NUM, STATE_CD, STATE_NAME, LOC_CD, LOC_NAME, CONTACT_ID, CONTACT_EMAIL, 
CONTACT_FNAME, CONTACT_LNAME, CONTACT_MNAME, CONTACT_TITLE, CONTACT_PHONE, CONTACT_EXT, CONTACT_FAX, AGENCY
 ,Unique_transaction_id, 
 Req_datetime, Res_datetime, Indv_id, Application_id, 
 --Create_dt, 
 Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_eDRS

GO
CREATE VIEW PRELAND.VW_BULK_LCJ_CS_RVWS_TB
AS
SELECT 
CASE_ID, SAMPLE_TYPE, SMPL_SQ, CS_RVW_CD, CS_LDS, RVWR, RVW_STTS_DT, SV_CNT, HH_CD, HH_NM, RVW_STTS, RVM_TM, RSPNS_TM, RVW_DRTN, OPND_FLG, RSTRTN_NDD_FLG, MISSING_CS_NF, WRKR, RSTRING_FLG, RSTRTN_DT, RSTRTN_MNT, OVR_PYMNT_FLG, OVR_PYMNT_DT, OVR_PAMNT_MNT, RSPNS_DRTN, SNT4RSP_TMSTMP, SNT4RVW_TMSTMP, FRST_SNT4RSPNS_DT, PRV_SMPL_SQ, PREV_CS_RVW_CD
FROM PRELAND.LCJ_CS_RVWS_TB

GO
CREATE VIEW PRELAND.VW_BULK_LCJ_FCTR_RVWS_TB
AS
SELECT 
 CASE_ID, CS_RVW_CD, SMPL_SQ, PRG_TYP, FCTR, FCTR_VL, VLDTN_CD, RSPNS_CD_1, RSPNS_CD_2, RVW_BY, RVW_DT, RSPNS_BY, RSPNS_DT, RVW_CMMNTS, RSPNS_CMMNTS
FROM PRELAND.[LCJ_FCTR_RVWS_TB]

GO
CREATE VIEW PRELAND.VW_BULK_FCTR_RVWS_TB
AS
SELECT CASE_ID, CS_RVW_CD, SMPL_SQ, PRG_TYP, FCTR, FCTR_VL, VLDTN_CD, RSPNS_CD_1, RSPNS_CD_2, RVW_BY, RVW_DT, RSPNS_BY, RSPNS_DT, RVW_CMMNTS, RSPNS_CMMNTS
FROM [PRELAND].[LCJ_FCTR_RVWS_TB]

GO
CREATE VIEW DPROFILE.VW_TEMP_BEN_DATA_SEQ AS SELECT File_Text FROM DPROFILE.TEMP_BEN_DATA_SEQ;

GO
CREATE VIEW PRELAND.VW_LCJ_CS_RVWS_TB
AS
SELECT 
CASE_ID, SAMPLE_TYPE, SMPL_SQ, CS_RVW_CD, CS_LDS, RVWR, RVW_STTS_DT, SV_CNT, HH_CD, HH_NM, RVW_STTS, RVM_TM, RSPNS_TM, RVW_DRTN, OPND_FLG, RSTRTN_NDD_FLG, MISSING_CS_NF, WRKR, RSTRING_FLG, RSTRTN_DT, RSTRTN_MNT, OVR_PYMNT_FLG, OVR_PYMNT_DT, OVR_PAMNT_MNT, RSPNS_DRTN, SNT4RSP_TMSTMP, SNT4RVW_TMSTMP, FRST_SNT4RSPNS_DT, PRV_SMPL_SQ, PREV_CS_RVW_CD
FROM PRELAND.LCJ_CS_RVWS_TB

GO
CREATE VIEW DPROFILE.[VW_TEMP_GROUP5_SEQ] AS SELECT File_Text FROM DPROFILE.TEMP_GROUP5_SEQ
GO
CREATE VIEW PRELAND.VW_TEMP_BEN_ISSUE_SEQ AS SELECT File_Text FROM PRELAND.TEMP_BEN_ISSUE_SEQ;

GO
CREATE VIEW PRELAND.VW_TEMP_GROUP1_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP1_SEQ;

GO
CREATE VIEW DPROFILE.[VW_TEMP_GROUP4_SEQ] AS SELECT File_Text FROM DPROFILE.TEMP_GROUP4_SEQ
GO
CREATE VIEW PRELAND.VW_TEMP_BULK_LOAD AS SELECT File_Text FROM PRELAND.TEMP_BULK_LOAD;


GO
CREATE VIEW PRELAND.VW_TEMP_GROUP2_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP2_SEQ;

GO
CREATE VIEW DPROFILE.[VW_TEMP_GROUP8_SEQ] AS SELECT File_Text FROM DPROFILE.TEMP_GROUP8_SEQ
GO
CREATE VIEW PRELAND.VW_BULK_LOAD_WITH_SEQ AS SELECT File_Text FROM PRELAND.BULK_LOAD_WITH_SEQ

GO
CREATE VIEW DPROFILE.[VW_TEMP_BEN_ISSUE_SEQ] AS SELECT File_Text FROM DPROFILE.TEMP_BEN_ISSUE_SEQ
GO
CREATE VIEW PRELAND.VW_TEMP_BEN_DATA_SEQ AS SELECT File_Text FROM PRELAND.TEMP_BEN_DATA_SEQ

GO



CREATE VIEW [preland].[VW_LAMI_INCOME_EARNED_DP]
AS
--1
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET1 INCE_AMT_DET, INCE_HRS_DET1 INCE_HRS_DET
FROM preland.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET1 > 0

--2
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET2, INCE_HRS_DET2
FROM preland.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET2 > 0

--3
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET3, INCE_HRS_DET3
FROM preland.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET3 > 0

--4
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET4,INCE_HRS_DET4
FROM preland.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET4 > 0

--5
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET5, INCE_HRS_DET5
FROM preland.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET5 > 0

--6
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET6, INCE_HRS_DET6
FROM preland.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET6 > 0

--7
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET7, INCE_HRS_DET7
FROM preland.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET7 > 0

--8
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET8, INCE_HRS_DET8
FROM preland.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET8 > 0

--9
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET9, INCE_HRS_DET9
FROM preland.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET9 > 0

--10
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET10, INCE_HRS_DET10
FROM preland.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET10 > 0





GO
CREATE VIEW PRELAND.VW_TEMP_GROUP4_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP4_SEQ

GO
CREATE VIEW PRELAND.VW_BULK_CASE_NOTES_LINK
AS
SELECT 
    IDN_CASE_NOTES_LINK, IDN_CASE_NOTES, CASE_NUM, LEGACY_SYS_ID, STRK_THRU_FLAG, OLD_CASE_NUM, OCM_UPDATED_TS, APP_ID

FROM PRELAND.CASE_NOTES_LINK

GO

 --select * from CVTEST.VW_JAS_JB_COMPONENT



 

CREATE VIEW CVTEST.VW_JAS_JB_COMPONENT 

AS

SELECT SEQ_ID, COMP_CASE_ID, 'AA' ACTIVITY_TYPE_CODE, ' Education Directly Related to Employment,' ACTIVITY_NAME,

ED_ASSESS_STATUS STATUS, 

ED_ASSESS_REFERRAL_DATE AS REFERRAL_DATE, 

ED_ASSESS_BEGIN_DATE as BEGIN_DATE, 

ED_ASSESS_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

ED_ASSESS_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

ED_ASSESS_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'EMPLOYMENT' ACTIVITY_NAME,

EMPLOY_ED_STATUS STATUS, 

EMPLOY_ED_REFERRAL_DATE AS REFERRAL_DATE, 

EMPLOY_ED_BEGIN_DATE as BEGIN_DATE, 

EMPLOY_ED_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

EMPLOY_ED_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

EMPLOY_ED_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

 

 

UNION 

 

SELECT SEQ_ID, COMP_CASE_ID, 'AE' ACTIVITY_TYPE_CODE, 'GED' ACTIVITY_NAME,

SECON_GED_STATUS STATUS, 

SECON_GED_REFERRAL_DATE AS REFERRAL_DATE, 

SECON_GED_BEGIN_DATE as BEGIN_DATE, 

SECON_GED_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

SECON_GED_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

SECON_GED_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

 

UNION 

 

SELECT SEQ_ID, COMP_CASE_ID, 'AE' ACTIVITY_TYPE_CODE, 'VOC' ACTIVITY_NAME,

VOC_ED_STATUS STATUS, 

VOC_ED_REFERRAL_DATE AS REFERRAL_DATE, 

VOC_ED_BEGIN_DATE as BEGIN_DATE, 

VOC_ED_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

VOC_ED_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

VOC_ED_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

 

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'Job Search/Job Readiness' ACTIVITY_NAME,

SEARCH_READINESS_STATUS STATUS, 

SEARCH_READINESS_REFERRAL_DATE AS REFERRAL_DATE, 

SEARCH_READINESS_BEGIN_DATE as BEGIN_DATE, 

SEARCH_READINESS_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

SEARCH_READINESS_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

SEARCH_READINESS_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'OJT' ACTIVITY_NAME,

ON_JB_TRN_STATUS STATUS, 

ON_JB_TRN_REFERRAL_DATE AS REFERRAL_DATE, 

ON_JB_TRN_BEGIN_DATE as BEGIN_DATE, 

ON_JB_TRN_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

ON_JB_TRN_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

ON_JB_TRN_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'WEP' ACTIVITY_NAME,

CWEP_STATUS STATUS, 

CWEP_REFERRAL_DATE AS REFERRAL_DATE, 

CWEP_BEGIN_DATE as BEGIN_DATE, 

CWEP_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

CWEP_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

CWEP_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'PRIVATE_EMPLOYMENT' ACTIVITY_NAME, ---private emp,public emp are present under any activity type code in activities excel which we are ref to--

PRIV_EMPL_STATUS STATUS, 

PRIV_EMPL_REFERRAL_DATE AS REFERRAL_DATE, 

PRIV_EMPL_BEGIN_DATE as BEGIN_DATE, 

PRIV_EMPL_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

PRIV_EMPL_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

PRIV_EMPL_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'PUBLIC_EMPLOYMENT' ACTIVITY_NAME,

PUBL_EMPL_STATUS STATUS, 

PUBL_EMPL_REFERRAL_DATE AS REFERRAL_DATE, 

PUBL_EMP
L_BEGIN_DATE as BEGIN_DATE, 

PUBL_EMPL_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

PUBL_EMPL_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

PUBL_EMPL_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'CSP' ACTIVITY_NAME,

COMM_SERV_STATUS STATUS, 

COMM_SERV_REFERRAL_DATE AS REFERRAL_DATE, 

COMM_SERV_BEGIN_DATE as BEGIN_DATE, 

COMM_SERV_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

COMM_SERV_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

COMM_SERV_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'PCC' ACTIVITY_NAME,

CHLD_CARE_STATUS STATUS, 

CHLD_CARE_REFERRAL_DATE AS REFERRAL_DATE, 

CHLD_CARE_BEGIN_DATE as BEGIN_DATE, 

CHLD_CARE_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

CHLD_CARE_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

CHLD_CARE_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'PST' ACTIVITY_NAME,

PAR_SKILL_STATUS STATUS, 

PAR_SKILL_REFERRAL_DATE AS REFERRAL_DATE, 

PAR_SKILL_BEGIN_DATE as BEGIN_DATE, 

PAR_SKILL_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

PAR_SKILL_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

PAR_SKILL_PROGRESS AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'JB_UNSUP_EMP' ACTIVITY_NAME,

JB_UNSUP_EMP_STATUS STATUS, 

NULL AS REFERRAL_DATE, 

NULL as BEGIN_DATE, 

NULL as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

NULL as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

NULL AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AE' ACTIVITY_TYPE_CODE, 'PSE' ACTIVITY_NAME,

POST_SECON_STATUS STATUS, 

POST_SECON_REFERRAL_DATE AS REFERRAL_DATE, 

POST_SECON_BEGIN_DATE as BEGIN_DATE, 

POST_SECON_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

POST_SECON_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

NULL AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'REH' ACTIVITY_NAME,

DRUG_ALCO_REHAB_STATUS STATUS, 

DRUG_ALCO_REHAB_REFERRAL_DATE AS REFERRAL_DATE, 

DRUG_ALCO_REHAB_BEGIN_DATE as BEGIN_DATE, 

DRUG_ALCO_REHAB_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

DRUG_ALCO_REHAB_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

NULL AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

SELECT SEQ_ID, COMP_CASE_ID, 'AM' ACTIVITY_TYPE_CODE, 'MHC' ACTIVITY_NAME,

MENT_HLTH_COUNSEL_STATUS STATUS, 

MENT_HLTH_COUNSEL_REFERRAL_DAT AS REFERRAL_DATE, 

MENT_HLTH_COUNSEL_BEGIN_DATE as BEGIN_DATE, 

MENT_HLTH_COUNSEL_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

MENT_HLTH_COUNSEL_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

NULL AS PROGRESS

FROM LAND.JAS_JB_COMPONENT

 

UNION 

---
SELECT SEQ_ID, COMP_CASE_ID, 'AO' ACTIVITY_TYPE_CODE, 'TBD' ACTIVITY_NAME,     ---Not sure what we would be using as activity name --

OTHER_STATUS STATUS, 

OTHER_REFERRAL_DATE AS REFERRAL_DATE, 

OTHER_BEGIN_DATE as BEGIN_DATE, 

OTHER_END_DATE as END_DATE,  

--ED_ASSESS_SCHED_HRS as SCHED_HRS, 

OTHER_ACTUAL_HRS as ACTUAL_HRS,

--ED_ASSESS_PARTICIPATION as PARTICIPATION, 

NULL AS PROGRESS

--Select *
FROM LAND.JAS_JB_COMPONENT

 

GO
CREATE VIEW PRELAND.VW_TEMP_GROUP5_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP5_SEQ

GO

CREATE VIEW [PRELAND].VW_BULK_ClearanceSummary_PARISDOD
AS
SELECT SSN, CLIENT_LAST_NAME, CLIENT_FIRST_NAME, CLIENT_DOB, FILE_DT, STATE_CODE, CLIENT_LOCATOR_CODE, CASE_NUM, RECORD_TYPE, FILE_DATE, DOB, LAST_NAME, FIRST_NAME, MIDDLE_NAME, SUFFIX_NAME, SEX, GROSS_PAY, UNIT_ID_CODE, AGENCY, PAY_PLAN, PAY_GRADE, PAY_STEP, BASIC_SALARY, STATE_RES, FEDERAL_TAX_WAGES, FEDERAL_TAX_WITHHELD, STATE_TAX_WAGES, STATE_TAX_WITHHELD, EMPLOYEE_STATUS_CD, PAYROLL_OFFICE_NUM, PERSONNEL_OFFICE_ID, PAY_BASIC_CODE, PAY_PERIOD_END_DT, DISBURSING_DT, PAY_STATUS, CATEGORY_CD, TOTAL_BASE_PAY_DRILLS, MARITAL_STATUS, DEPENDENTS_QUANTITY, OFF_DUTY_MILITARY_CD, WELFARE_TO_WORK_HIRE_CD, CITY, STATE, ZIP, ADDRESS_LINE_1, ADDRESS_LINE_2, ADDRESS_LINE_3, ADDRESS_LINE_4, ADDRESS_LINE_5, ADDRESS_LINE_6, MAILING_ADD_EFF_CALENDAR_DT, CLAIM_NUMBER, RTD_PAY_ENT_EFF_DT, COMMENT1, COMMENT2, COMMENT3, 
COMMENT4, 
--,Unique_transaction_id, 
Req_datetime, Res_datetime, Indv_id, Application_id, Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].[ClearanceSummary_PARISDOD]

GO

--DROP  VIEW [LAND].[VW_DC_EMPLOYMENT_LAMI_INCOME_EARNED]

CREATE VIEW [LAND].[VW_DC_EMPLOYMENT_LAMI_INCOME_EARNED]
AS


--1
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_V, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET1 INCE_AMT_DET, INCE_HRS_DET1 INCE_HRS_DET, DBO.F_GET_EMP_PAYMENT_DATE(INCE_EFF_DATE,0,INCE_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET1 > 0
--2
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_V, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET2, INCE_HRS_DET2, DBO.F_GET_EMP_PAYMENT_DATE(INCE_EFF_DATE,1,INCE_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET2 > 0

--3
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_V, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET3, INCE_HRS_DET3, DBO.F_GET_EMP_PAYMENT_DATE(INCE_EFF_DATE,2,INCE_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET3 > 0

--4
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_V, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET4,INCE_HRS_DET4, DBO.F_GET_EMP_PAYMENT_DATE(INCE_EFF_DATE,3,INCE_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET4 > 0

--5
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_V, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET5, INCE_HRS_DET5, DBO.F_GET_EMP_PAYMENT_DATE(INCE_EFF_DATE,4,INCE_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET5 > 0

--6
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_V, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET6, INCE_HRS_DET6, DBO.F_GET_EMP_PAYMENT_DATE(INCE_EFF_DATE,5,INCE_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET6 > 0

--7
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_V, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET7, INCE_HRS_DET7, DBO.F_GET_EMP_PAYMENT_DATE(INCE_EFF_DATE,6,INCE_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET7 > 0

--8
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_V, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET8, INCE_HRS_DET8, DBO.F_GET_EMP_PAYMENT_DATE(INCE_EFF_DATE,7,INCE_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET8 > 0

--9
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_V, INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET9, INCE_HRS_DET9, DBO.F_GET_EMP_PAYMENT_DATE(INCE_EFF_DATE,8,INCE_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET9 > 0

--10
UNION ALL
SELECT SEQ_ID, INCE_EFF_DATE, INCE_EXPIRE_DATE, INCE_FREQ, INCE_V,  INCE_EMPLOYER_NAME, INCE_PID, INCE_AMT_DET10, INCE_HRS_DET10, DBO.F_GET_EMP_PAYMENT_DATE(INCE_EFF_DATE,9,INCE_FREQ) PAYMENT_EXPENSE_DT
FROM LAND.LAMI_INCOME_EARNED(NOLOCK)
WHERE INCE_AMT_DET10 > 0

--no need using temo table--
/*
IF EXISTS (SELECT * from Sys.views Where Name = 'VW_CASE_PGM_MEM_FOR_REL')
DROP VIEW LAND.VW_CASE_PGM_MEM_FOR_REL;
GO


CREATE VIEW [LAND].[VW_CASE_PGM_MEM_FOR_REL]
AS
SELECT distinct A.CPM_CID,
A.CPM_PID as INDV_ID,
A.CPM_REL_TO_HH as REL_TO_HH,
dbo.F_GET_PREPARES_AND_PURCHASES_SW(A.CPM_CID, A.CPM_PID, B.CPM_PID) as PREPARES_AND_PURCHASES_SW, 
B.CPM_PID as REF_INDV_ID,
B.CPM_REL_TO_HH as REF_REL_TO_HH,
0 as SEQ_ID

 FROM LAND.LAMI_CASE_PGM_MEM(NOLOCK) A
INNER JOIN LAND.LAMI_CASE_PGM_MEM(NOLOCK) B ON (A.CPM_CID = B.CPM_CID AND A.CPM_PGM_TYPE = B.CPM_PGM_TYPE)
WHERE A.CPM_PID <> B.CPM_PID



GO
*/



GO
CREATE VIEW PRELAND.VW_BULK_DGS_PACKET
AS
SELECT 
IDN_DGS_PACKET,
PACKET_FORM_STATUS,
CASE_NUMBER,
LANGUAGE,
CASE_NOTE_FLAG,
CREATED_STAFF_ID,
CREATED_TS,
UPDATED_STAFF_ID,
UPDATED_TS,
--DATA_SOURCE_XML,
PACKET_FORM_ID,
MAILING_DATE_TS,
EMPLOYER_NAME,
ERR_LOG_IND
FROM PRELAND.DGS_PACKET


GO
CREATE VIEW PRELAND.VW_TEMP_GROUP6_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP6_SEQ

GO
/*

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN Req_datetime VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN Res_datetime VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN Create_dt VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN Update_dt VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN ADDRESS_LINE_1 VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN ADDRESS_LINE_2 VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN ADDRESS_CITY VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN ADDRESS_STATE VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN GENDER_CD VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN MARITAL_STATUS VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN ADDRESS_ZIP_CODE VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN VA_MATCH_REQ_CD VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN STATE_MATCH_REQ_CD VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN GENERAL_ASST_IND VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN Unique_transaction_id VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN Application_id VARCHAR(200)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN Indv_id VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN Create_user_id VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN Update_user_id VARCHAR(2000)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN FOOD_STAMP_IND VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN STTE_CODE VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN SSI_ELIG_START_DT VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN CON_SUPP_FAX_IND VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN GEN_ASSIST_ELIG_END_DT VARCHAR(50)



ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN CON_SUPP_EMAIL_IND VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN CON_SUPP_PHONE_NUM_EXT VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN TANF_MON_ELIG VARCHAR(50)

ALTER TABLE [PRELAND].ClearanceSummary_PARISInterstate ALTER COLUMN FED_MATCH_REQ_CD VARCHAR(50)



DROP TABLE [PRELAND].[ClearanceSummary_PARISInterstate];


CREATE TABLE [PRELAND].[ClearanceSummary_PARISInterstate](
	[CLIENT_SSN] [varchar](9) NULL,
	[CLIENT_LAST_NAME] [varchar](50) NULL,
	[CLIENT_FIRST_NAME] [varchar](15) NULL,
	[CLIENT_DOB] [varchar](25) NULL,
	[FILE_DT] [varchar](25) NULL,
	[STTE_CODE] [varchar](50) NULL,
	[STATE_OPTIONAL_DATA] [varchar](60) NULL,
	[CLIENT_LOC_CODE] [varchar](3) NULL,
	[CASE_NUM] [bigint] NULL,
	[CON_SUPP_PHONE_IND] [varchar](1) NULL,
	[CON_SUPP_FAX_IND] [varchar](50) NULL,
	[CON_SUPP_EMAIL_IND] [varchar](50) NULL,
	[CON_SUPP_PHONE_NUM] [varchar](10) NULL,
	[CON_SUPP_PHONE_NUM_EXT] [varchar](50) NULL,
	[CON_SUPP_FAX_NUM] [varchar](10) NULL,
	[CON_SUPP_EMAIL] [varchar](40) NULL,
	[SSN_VERF_IND] [varchar](1) NULL,
	[TANF_MON_ELIG] [varchar](50) NULL,
	[CASH_LAST_PAID_AMT] [bigint] NULL,
	[FS_LAST_PAID_AMT] [bigint] NULL,
	[LAST_EBT_ACCESS_DT] [varchar](25) NULL,
	[FRAUD_IND] [varchar](1) NULL,
	[FUGITIVE_FELON_IND] [varchar](1) NULL,
	[PROBATN_N_PAROLE_VIOLATN_IND] [varchar](1) NULL,
	[DRUG_RELATED_FELON_IND] [varchar](1) NULL,
	[ADDRESS_LINE_1] [varchar](50) NULL,
	[ADDRESS_LINE_2] [varchar](50) NULL,
	[ADDRESS_CITY] [varchar](50) NULL,
	[ADDRESS_STATE] [varchar](50) NU
LL,
	[ADDRESS_ZIP_CODE] [varchar](50) NULL,
	[GENDER_CD] [varchar](50) NULL,
	[MARITAL_STATUS] [varchar](50) NULL,
	[VA_MATCH_REQ_CD] [varchar](50) NULL,
	[STATE_MATCH_REQ_CD] [varchar](50) NULL,
	[FED_MATCH_REQ_CD] [varchar](50) NULL,
	[TANF_IND] [varchar](1) NULL,
	[GENERAL_ASST_IND] [varchar](50) NULL,
	[FOOD_STAMP_IND] [varchar](50) NULL,
	[SSI_IND] [varchar](1) NULL,
	[MEDICAID_IND] [varchar](1) NULL,
	[CHILD_CARE_IND] [varchar](1) NULL,
	[WORKERS_COMP_IND] [varchar](1) NULL,
	[TANF_ELIG_START_DT] [varchar](25) NULL,
	[TANF_ELIG_END_DT] [varchar](25) NULL,
	[MEDICAID_ELIG_START_DT] [varchar](25) NULL,
	[MEDICAID_ELIG_END_DT] [varchar](25) NULL,
	[FOOD_STAMPS_ELIG_START_DT] [varchar](25) NULL,
	[FOOD_STAMPS_ELIG_END_DT] [varchar](25) NULL,
	[GEN_ASSIST_ELIG_START_DT] [varchar](25) NULL,
	[GEN_ASSIST_ELIG_END_DT] [varchar](50) NULL,
	[SSI_ELIG_START_DT] [varchar](50) NULL,
	[SSI_ELIG_END_DT] [varchar](25) NULL,
	[CHILD_CARE_ELIG_START_DT] [varchar](25) NULL,
	[CHILD_CARE_ELIG_END_DT] [varchar](25) NULL,
	[WORKER_COMP_ELIG_START_DT] [varchar](25) NULL,
	[WORKER_COMP_ELIG_END_DT] [varchar](25) NULL,
	[WORKER_COMP_PAY_AMT] [bigint] NULL,
	[MA_CONTACT_PERSON_INFO] [varchar](50) NULL,
     Unknown VARCHAR(50),
	[Unique_transaction_id] [varchar](50) NULL,
	[Req_datetime] [varchar](50) NULL,
	[Res_datetime] [varchar](50) NULL,
	[Indv_id] [varchar](50) NULL,
	[Application_id] [varchar](200) NULL,
	[Create_dt] [varchar](50) NULL,
	[Create_user_id] [varchar](50) NULL,
	[Update_dt] [varchar](50) NULL,
	[Update_user_id] [varchar](2000) NULL,
	[SEQ_ID] [int] IDENTITY(1,1) NOT NULL
) ON [PRIMARY]

GO


*/


CREATE VIEW PRELAND.VW_BULK_ClearanceSummary_PARISInterstate
AS
SELECT 
CLIENT_SSN, CLIENT_LAST_NAME, CLIENT_FIRST_NAME, 
CLIENT_DOB, FILE_DT, STTE_CODE, STATE_OPTIONAL_DATA, CLIENT_LOC_CODE, CASE_NUM, CON_SUPP_PHONE_IND, CON_SUPP_FAX_IND, CON_SUPP_EMAIL_IND, CON_SUPP_PHONE_NUM, CON_SUPP_PHONE_NUM_EXT, CON_SUPP_FAX_NUM, CON_SUPP_EMAIL, SSN_VERF_IND, TANF_MON_ELIG, CASH_LAST_PAID_AMT, FS_LAST_PAID_AMT, LAST_EBT_ACCESS_DT, FRAUD_IND, FUGITIVE_FELON_IND, PROBATN_N_PAROLE_VIOLATN_IND, DRUG_RELATED_FELON_IND, ADDRESS_LINE_1, ADDRESS_LINE_2, ADDRESS_CITY, ADDRESS_STATE, ADDRESS_ZIP_CODE, GENDER_CD, MARITAL_STATUS, VA_MATCH_REQ_CD, STATE_MATCH_REQ_CD, FED_MATCH_REQ_CD, TANF_IND, GENERAL_ASST_IND, FOOD_STAMP_IND, SSI_IND, MEDICAID_IND, CHILD_CARE_IND, WORKERS_COMP_IND, TANF_ELIG_START_DT, TANF_ELIG_END_DT, MEDICAID_ELIG_START_DT, MEDICAID_ELIG_END_DT, FOOD_STAMPS_ELIG_START_DT, FOOD_STAMPS_ELIG_END_DT, GEN_ASSIST_ELIG_START_DT, GEN_ASSIST_ELIG_END_DT, SSI_ELIG_START_DT, SSI_ELIG_END_DT, CHILD_CARE_ELIG_START_DT, CHILD_CARE_ELIG_END_DT, WORKER_COMP_ELIG_START_DT, WORKER_COMP_ELIG_END_DT, WORKER_COMP_PAY_AMT, MA_CONTACT_PERSON_INFO
,Unknown
, Unique_transaction_id, 
Req_datetime, Res_datetime, Indv_id, Application_id, Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_PARISInterstate

GO
  CREATE VIEW PRELAND.VW_TEMP_GROUP8_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP8_SEQ

GO
CREATE VIEW PRELAND.VW_TEMP_GROUP9_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP9_SEQ

GO


--DROP VIEW   [LAND].[VW_DC_MEDICAL_DEDUCTIONS_LAMI_EXPENSES]

 CREATE VIEW [LAND].[VW_DC_MEDICAL_DEDUCTIONS_LAMI_EXPENSES]
 AS
 --OPEN --
  SELECT EXP_PID, 
                   EXP_EFF_DATE,
				   EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				    dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'MEDICALEXPENSETYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'MEDICALEXPENSEVRF') as EXP_V,
				   EXP_AMT, SEQ_ID 
	--SELECT *
  from LAND.LAMI_EXPENSES(NOLOCK) A
Where LTRIM(RTRIM(EXP_TYPE))  IN  ('MHNC' ,  'MMHI' , 'MMHI' , 'MRXX'  ,'MAPP' , 'M/DS'  ,'MTRP' , 'MHHC' , 'MXOT'  ,'MCRE')
AND isnull(EXP_EXPIRE_DATE, getdate()) >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_OPEN_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)

UNION
--CLOSED--
 SELECT EXP_PID, 
                   EXP_EFF_DATE,
				   EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				     dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'MEDICALEXPENSETYPE') EXP_TYPE,
				 dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'MEDICALEXPENSEVRF') as EXP_V,
				   EXP_AMT, SEQ_ID 
	--SELECT *
  from LAND.LAMI_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=EXP_PID
WHERE LTRIM(RTRIM(EXP_TYPE))  IN  ('MHNC' ,  'MMHI' , 'MMHI' , 'MRXX'  ,'MAPP' , 'M/DS'  ,'MTRP' , 'MHHC' , 'MXOT'  ,'MCRE')
AND EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (
SELECT  EXP_PID, MAX_EXP_EXPIRE_DATE
FROM (
SELECT EXP_PID, ISNULL(MAX(EXP_EXPIRE_DATE),GETDATE()) MAX_EXP_EXPIRE_DATE 
                    FROM LAND.LAMI_EXPENSES(NOLOCK) 
     GROUP BY EXP_PID)  B 
        WHERE A.EXP_PID =B.EXP_PID AND ISNULL(A.EXP_EXPIRE_DATE,GETDATE()) = B.MAX_EXP_EXPIRE_DATE)
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)


UNION
--CLOSED--
 SELECT EXP_PID, 
                   EXP_EFF_DATE,
				   EXP_EXPIRE_DATE, 
				   EXP_TYPE as Legacy_EXP_TYPE, 
				   EXP_FREQ as Legacy_EXP_FREQ, 
				   EXP_V as Legacy_EXP_V,
				     dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(EXP_TYPE)), 'MEDICALEXPENSETYPE') EXP_TYPE,
				 dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(EXP_V)), 'MEDICALEXPENSEVRF') as EXP_V,
				   EXP_AMT, SEQ_ID 
	--SELECT *
  from LAND.LAMI_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=EXP_PID
WHERE LTRIM(RTRIM(EXP_TYPE))  IN  ('MHNC' ,  'MMHI' , 'MMHI' , 'MRXX'  ,'MAPP' , 'M/DS'  ,'MTRP' , 'MHHC' , 'MXOT'  ,'MCRE')
AND EXP_EXPIRE_DATE IS NULL
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.EXP_PID = B.CASE_PID)

---***LACAP EXPENSES***
UNION 
--OPEN
SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE, 
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				   dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'MEDICALEXPENSETYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'MEDICALEXPENSEVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
FROM LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
Where LTRIM(RTRIM(LACAP_EXP_TYPE))  IN  ('MHNC' ,  'MMHI' , 'MMHI' , 'MRXX'  ,'MAPP' , 'M/DS'  ,'MTRP' , 'MHHC' , 'MXOT'  ,'MCRE')
AND
 isnull(LACAP_EXP_EXPIRE_DATE, getdate()) >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_OPEN_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)

UNION 
--CLOSED--

SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE,
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				    dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'MEDICALEXPENSETYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'MEDICALEXPENSEVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=LACAP_EXP_PID
WHERE LTRIM(RTRIM(LACAP_EXP_TYPE))  IN  ('MHNC' ,  'MMHI' , 'MMHI' , 'MRXX'  ,'MAPP' , 'M/DS'  ,'MTRP' , 'MHHC' , 'MXOT' ,'MCRE')
AND LACAP_EXP_EXPIRE_DATE >= DATEADD(MM, -36, dbo.F_GET_ECTRACT_DATE()) 
AND EXISTS (
SELECT  LACAP_EXP_PID, MAX_LACAP_EXP_EXPIRE_DATE
FROM (
SELECT LACAP_EXP_PID, ISNULL(MAX(LACAP_EXP_EXPIRE_DATE),GETDATE()) MAX_LACAP_EXP_EXPIRE_DATE 
                    FROM LAND.LAMI_LACAP_EXPENSES(NOLOCK) 
     GROUP BY LACAP_EXP_PID)  B 
        WHERE A.LACAP_EXP_PID =B.LACAP_EXP_PID AND ISNULL(A.LACAP_EXP_EXPIRE_DATE,GETDATE()) = B.MAX_LACAP_EXP_EXPIRE_DATE)
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)



UNION 
--CLOSED--

SELECT LACAP_EXP_PID as EXP_PID, 
                   LACAP_EXP_EFF_DATE as EXP_EFF_DATE,
				    LACAP_EXP_EXPIRE_DATE as EXP_EXPIRE_DATE, 
				   LACAP_EXP_TYPE as Legacy_EXP_TYPE, 
				   LACAP_EXP_FREQ as Legacy_EXP_FREQ, 
				   LACAP_EXP_V as Legacy_EXP_V,
				    dbo.F_GET_REFERENCE_DATA ('FREQ',LTRIM(RTRIM(LACAP_EXP_FREQ)),'PAYEXPFREQUENCY')  EXP_FREQ,  
				   dbo.F_GET_REFERENCE_DATA ('EXPE', LTRIM(RTRIM(LACAP_EXP_TYPE)), 'MEDICALEXPENSETYPE') EXP_TYPE,
				  dbo.F_GET_REFERENCE_DATA ('EVER', LTRIM(RTRIM(LACAP_EXP_V)), 'MEDICALEXPENSEVRF') as EXP_V,
				   LACAP_EXP_AMT as EXP_AMT,
				   SEQ_ID
--SELECT *
  from LAND.LAMI_LACAP_EXPENSES(NOLOCK) A
JOIN STAGE.DC_INDV(NOLOCK) B ON B.INDV_ID=LACAP_EXP_PID
WHERE LTRIM(RTRIM(LACAP_EXP_TYPE))  IN  ('MHNC' ,  'MMHI' , 'MMHI' , 'MRXX'  ,'MAPP' , 'M/DS'  ,'MTRP' , 'MHHC' , 'MXOT'  ,'MCRE')
AND LACAP_EXP_EXPIRE_DATE IS NULL
AND EXISTS (SELECT CASE_PID FROM dbo.PRELANDING_DP_CLOSED_MEMBERS(NOLOCK) B  WHERE A.LACAP_EXP_PID = B.CASE_PID)










GO
CREATE VIEW PRELAND.VW_TEMP_GROUP10_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP10_SEQ

GO
CREATE VIEW PRELAND.VW_BULK_ClearanceSummary_PrisonerVerification
AS
SELECT SSN, 
SVES_PRISONER_NAME, SVES_PRISONER_STATE_CD, SVES_PRISONER_WELFARE_ID, STATUS_CODE, PRISONER_LAST_NAME, PRISONER_FIRST_NAME, PRISONER_MIDDLE_NAME, PRISONER_SUFFIX, PRISONER_ID, PRISONER_DOB_DT, GENDER_CD, CONFINEMENT_DT, RELEASE_DT, SSA_REPORT_DT, REPORTER_NAME, FACILITY_NAME, FACILITY_ADDR, FACILITY_CITY, FACILITY_STATE_CD, FACILITY_ZIP5, FACILITY_ZIP4, FACILITY_CONTACT_NAME, FACILITY_PHONE_NUM, FACILITY_FAX_NUM, FACILITY_TYPE_CD
--, Unique_transaction_id
, Req_datetime, Res_datetime
, Indv_id, Application_id, Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_PrisonerVerification

GO
/*
ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN Req_datetime VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN Res_datetime VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN Create_dt VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN Update_dt VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN CLIENT_DOB VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN FILE_DT VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN LAST_EBT_ACCESS_DT VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN LAST_EBT_ACCESS_DT VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN Indv_id VARCHAR(9)

ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN Application_id VARCHAR(10)

ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN Update_user_id VARCHAR(50)


ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN Req_datetime VARCHAR(50)
ALTER TABLE [PRELAND].ClearanceSummary_QuarterlyWages ALTER COLUMN ReS_datetime VARCHAR(50)

G0




SELECT Count(1) from INFORMATION_SCHEMA.COLUMNS where table_Name = 'ClearanceSummary_QuarterlyWages' and TABLE_SCHEMA = 'PRELAND'
and Column_Name != 'SEQ_ID'


*/


CREATE VIEW [PRELAND].VW_BULK_ClearanceSummary_QuarterlyWages
AS
SELECT EMPLOYER_ID, EMPLOYER_NAME, MAILING_ADDR_1, MAILING_ADDR_2, MAILING_CITY, MAILING_STATE, MAILING_ZIP, PHYSICAL_ADDR_1, PHYSICAL_ADDR_2, PHYSICAL_CITY, PHYSICAL_STATE, PHYSICAL_ZIP, TELEPHONE_NM, EMAIL_ADDR, QUARTER_END_DT, WAGE_AMT, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, Application_id
, Create_dt,Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_QuarterlyWages

GO
CREATE VIEW PRELAND.VW_BULK_LWC_AUDIT_TB
AS
SELECT 
AUDIT_ID, USER_ID, RACF_ID, AUDIT_SSN, CREATE_TS, AUDIT_DATE, MATCH_FOUND, RESPONSE_CD
FROM PRELAND.LWC_AUDIT_TB

GO


--DROP VIEW LAND.VW_CASE_PGM_MEM_FOR_REL;
--GO


CREATE VIEW [LAND].[VW_CASE_PGM_MEM_FOR_REL]
AS
SELECT distinct --A.CPM_CID,
A.CPM_PID as INDV_ID,
A.CPM_REL_TO_HH as REL_TO_HH,
dbo.F_GET_PREPARES_AND_PURCHASES_SW(A.CPM_CID, A.CPM_PID, B.CPM_PID) as PREPARES_AND_PURCHASES_SW, 
B.CPM_PID as REF_INDV_ID,
B.CPM_REL_TO_HH as REF_REL_TO_HH,
0 as SEQ_ID
--SELECT A.*
 FROM LAND.LAMI_CASE_PGM_MEM(NOLOCK) A
INNER JOIN LAND.LAMI_CASE_PGM_MEM(NOLOCK) B ON (A.CPM_CID = B.CPM_CID AND A.CPM_PGM_TYPE = B.CPM_PGM_TYPE)
WHERE A.CPM_PID <> B.CPM_PID
AND EXISTS (SELECT 1 FROM STAGE.DC_Cases(NOLOCK) C WHERE C.CASE_NUM = A.CPM_CID AND CASE_STATUS_CD = 'AP') --ACTV
AND EXISTS (SELECT 1 FROM STAGE.DC_Case_INDIVIDUAL(NOLOCK) D WHERE D.CASE_NUM = A.CPM_CID AND D.INDV_ID = A.CPM_PID) --A
AND EXISTS (SELECT 1 FROM STAGE.DC_Case_INDIVIDUAL(NOLOCK) E WHERE E.CASE_NUM = B.CPM_CID AND E.INDV_ID = B.CPM_PID) --B



--SELECT distinct CASE_STATUS_CD FROM STAGE.DC_Cases(NOLOCK) 

--select top 10 * from STAGE.DC_Cases


--CREATE INDEX IX_LAMI_CASE_PGM_MEM ON LAND.LAMI_CASE_PGM_MEM (CPM_CID, CPM_PGM_TYPE)




GO
CREATE VIEW PRELAND.VW_TEMP_GROUP13_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP13_SEQ

GO
CREATE VIEW PRELAND.VW_TEMP_GROUP11_SEQ AS SELECT File_Text FROM PRELAND.TEMP_GROUP11_SEQ

GO
CREATE VIEW PRELAND.VW_BULK_ClearanceSummary_SOLQi_DUAL
AS
SELECT 
INPUT_SSN, INPUT_SSCN, INPUT_SURNAME, INPUT_MIDDLENAME, INPUT_GIVENNAME, 
INPUT_DOB, ZIP_CODE_5, 
ZIP_CODE_4, NUM_LINES_ADDRESS, ADDRESS, SCHED_PAY_DT, LAF_CODE, INITIAL_ENTITLE_DT, SUSP_OR_TERM_DT, NET_MLY_BENEFIT_IF_PAYABLE, SMI_PREMIUM_AMT, SMI_BUYIN_SW, DOD_1, DUAL_ENT_NUM, DUAL_ENT_BIC, MBC_DT, MBC_AMT, MBC_TYPE, DIR_DEP_IND_2
, Unique_transaction_id
, Req_datetime, Res_datetime, Indv_id, Application_id, Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_SOLQi_DUAL

GO
CREATE VIEW DPROFILE.[VW_TEMP_GROUP6_SEQ] AS SELECT File_Text FROM DPROFILE.TEMP_GROUP6_SEQ
GO
/*
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_STANDARD ALTER COLUMN Req_datetime VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_STANDARD ALTER COLUMN Res_datetime VARCHAR(250)

ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_STANDARD ALTER COLUMN Create_dt VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_STANDARD ALTER COLUMN Update_dt VARCHAR(25)


ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_STANDARD ALTER COLUMN Create_user_id VARCHAR(250)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_STANDARD ALTER COLUMN Update_user_id VARCHAR(250)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_STANDARD ALTER COLUMN TITLE_II_STATUS VARCHAR(250)


ALTER VIEW [PRELAND].[VW_ClearanceSummary_SOLQi_STANDARD]
AS
select 
INPUT_SSN, INPUT_SSCN, INPUT_SURNAME, INPUT_MIDDLENAME, INPUT_GIVENNAME, INPUT_DOB, INPUT_GENDER_CD, INPUT_STATE_AGENCY_CODE, INPUT_CAT_ASSIST_CD, INPUT_ST_COMM_CD, INPUT_WELFARE_ID_NUM, DATE_OF_WTPY_RESPONSE, 
ERROR_CD, 
DISCREPANCY_CD, 
UNKNOWN,
VER_CD
,VER_SSN_DATA, 
RECORD_TYPE, TITLE_II_STATUS, TITLE_XVI_STATUS
, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, Application_id
--, Create_dt, 
,Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_SOLQi_STANDARD

GO



SELECT Count(1) from INFORMATION_SCHEMA.COLUMNS where table_Name = 'ClearanceSummary_SOLQi_STANDARD' and TABLE_SCHEMA = 'PRELAND'
and Column_Name != 'SEQ_ID'


*/


CREATE VIEW [PRELAND].VW_BULK_ClearanceSummary_SOLQi_STANDARD
AS
select 
INPUT_SSN, INPUT_SSCN, INPUT_SURNAME, INPUT_MIDDLENAME, INPUT_GIVENNAME, INPUT_DOB, INPUT_GENDER_CD, INPUT_STATE_AGENCY_CODE, INPUT_CAT_ASSIST_CD, INPUT_ST_COMM_CD, INPUT_WELFARE_ID_NUM, DATE_OF_WTPY_RESPONSE, 
ERROR_CD, 
DISCREPANCY_CD, 
UNKNOWN,
VER_CD
,VER_SSN_DATA, 
RECORD_TYPE, TITLE_II_STATUS, TITLE_XVI_STATUS
, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id, Application_id
, Create_dt,Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_SOLQi_STANDARD


GO
/*
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE2 ALTER COLUMN Req_datetime VARCHAR(25)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE2 ALTER COLUMN Res_datetime VARCHAR(250)

ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE2 ALTER COLUMN Create_dt VARCHAR(25)

ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE2 ALTER COLUMN Update_dt VARCHAR(25)


ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE2 ALTER COLUMN Create_user_id VARCHAR(250)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE2 ALTER COLUMN Update_user_id VARCHAR(250)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE2 ALTER COLUMN ADDRESS VARCHAR(250)

437172642~001080176C01~VARNADO~D~AMIYA~1012200803103~5439~NICOLE WELLS FOR      AMIYA D VARNADO       248 GREEN ST          APT 2                 MANCHESTER NH~~~S~10122008~02012009~02012009~0.0~0.0~~~~~02012009~0.0~N~~2012-07-04 

ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE2 ALTER COLUMN Application_id VARCHAR(250)
ALTER TABLE [PRELAND].ClearanceSummary_SOLQi_TITLE2 ALTER COLUMN Update_user_id VARCHAR(2050)

ALTER VIEW [PRELAND].[VW_ClearanceSummary_SOLQi_TITLE2]
AS
select 
INPUT_SSN, INPUT_SSCN, INPUT_SURNAME, INPUT_MIDDLENAME, INPUT_GIVENNAME, INPUT_DOB
--, ZIP_CODE_5, 
,ZIP_CODE_4, ADDRESS, DIR_DEP_IND_1, SCHED_PAY_DT, LAF_CODE, DOB_1, INITIAL_ENTITLE_DT, SUSP_OR_TERM_DT, NET_MLY_BENEFIT_IF_PAYABLE, SMI_PREMIUM_AMT, SMI_BUYIN_SW, DOD_1, DUAL_ENT_NUM, DUAL_ENT_BIC, MBC_DT, MBC_AMT, MBC_TYPE, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id
, Application_id, --Create_dt, 
Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_SOLQi_TITLE2
GO




SELECT Count(1) from INFORMATION_SCHEMA.COLUMNS where table_Name = 'ClearanceSummary_SOLQi_TITLE2' and TABLE_SCHEMA = 'PRELAND'
and Column_Name != 'SEQ_ID'

PS: Missing ~ between DOB and ZIP_5, between Appliaction_ID and CREATE_DT amd EOL missing
*/



CREATE VIEW [PRELAND].VW_BULK_ClearanceSummary_SOLQi_TITLE2
AS
select 
INPUT_SSN, INPUT_SSCN, INPUT_SURNAME, INPUT_MIDDLENAME, INPUT_GIVENNAME, INPUT_DOB
, ZIP_CODE_5, 
ZIP_CODE_4, ADDRESS, DIR_DEP_IND_1, SCHED_PAY_DT, LAF_CODE, DOB_1, INITIAL_ENTITLE_DT, SUSP_OR_TERM_DT, NET_MLY_BENEFIT_IF_PAYABLE, SMI_PREMIUM_AMT, SMI_BUYIN_SW, DOD_1, DUAL_ENT_NUM, DUAL_ENT_BIC, MBC_DT, MBC_AMT, MBC_TYPE, Unique_transaction_id, Req_datetime, Res_datetime, Indv_id
, Application_id, Create_dt, Create_user_id, Update_dt, Update_user_id
FROM [PRELAND].ClearanceSummary_SOLQi_TITLE2

GO
